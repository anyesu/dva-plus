(function(e){function t(t){for(var r,s,i=t[0],c=t[1],l=t[2],d=0,p=[];d<i.length;d++)s=i[d],Object.prototype.hasOwnProperty.call(a,s)&&a[s]&&p.push(a[s][0]),a[s]=0;for(r in c)Object.prototype.hasOwnProperty.call(c,r)&&(e[r]=c[r]);u&&u(t);while(p.length)p.shift()();return o.push.apply(o,l||[]),n()}function n(){for(var e,t=0;t<o.length;t++){for(var n=o[t],r=!0,i=1;i<n.length;i++){var c=n[i];0!==a[c]&&(r=!1)}r&&(o.splice(t--,1),e=s(s.s=n[0]))}return e}var r={},a={2:0},o=[];function s(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,s),n.l=!0,n.exports}s.m=e,s.c=r,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},s.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)s.d(n,r,function(t){return e[t]}.bind(null,r));return n},s.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="https://cdn.jsdelivr.net/gh/anyesu/dva-plus@gh-pages/";var i=window["webpackJsonp"]=window["webpackJsonp"]||[],c=i.push.bind(i);i.push=t,i=i.slice();for(var l=0;l<i.length;l++)t(i[l]);var u=c;o.push([0,3,4,0,1]),n()})({"/7QA":function(e,t,n){"use strict";n.d(t,"d",(function(){return w})),n.d(t,"e",(function(){return N})),n.d(t,"f",(function(){return U})),n.d(t,"a",(function(){return W})),n.d(t,"c",(function(){return Y})),n.d(t,"b",(function(){return Z}));var r=n("o0o1"),a=n.n(r),o=n("VTBJ"),s=n("gSGL"),i=n("vJtL"),c=n("7EGn"),l=n("oTSI"),u=n("jeQL"),d=n("M1Wn"),p=n("ODXe"),m="/",h={state(e,t){return a.a.mark((function e(){var n;return a.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=t.state,e.delegateYield(n(),"t0",2);case 2:return e.abrupt("return",e.t0);case 3:case"end":return e.stop()}}),e)}))()}},f={updateState(e,t){var n=t.type,r=t.payload,a=n.split(m),s=Object(p["a"])(a,1),i=s[0];return Object(o["a"])(Object(o["a"])({},e),{},{[i]:Object(o["a"])(Object(o["a"])({},e[i]),r)})}},v={updateState(e,t){var n=t.payload;return Object(o["a"])(Object(o["a"])({},e),n)}};function g(e){var t;return null===(t=Object.entries(f).find((t=>{var n=Object(p["a"])(t,1),r=n[0];return e.endsWith("".concat(m).concat(r))})))||void 0===t?void 0:t[1]}function b(e){var t;return null===(t=Object.entries(v).find((t=>{var n=Object(p["a"])(t,1),r=n[0];return e===r})))||void 0===t?void 0:t[1]}var y=(e,t)=>{var n=a.a.mark(b),r=a.a.mark(y),l=a.a.mark(E),u=a.a.mark(w),d=a.a.mark(x),p=e.namespace,m=e.reducers,h=e.effects;function f(e){var t="".concat(p,"/").concat(e),n=t.replace(/\/@@[^/]+?$/,"");return(null===m||void 0===m?void 0:m[n])||(null===h||void 0===h?void 0:h[n])||g(n)?t:e}function v(e){var n=t.take;if(n)return Object(s["a"])(e)?n(f(e)):Array.isArray(e)?n(e.map((e=>Object(s["a"])(e)?f(e):e))):n(e)}function b(e,r,i){var c;return a.a.wrap((function(n){while(1)switch(n.prev=n.next){case 0:return c=Object(s["a"])(e)?{type:e,payload:r,callback:i}:e,n.next=3,t.put(Object(o["a"])(Object(o["a"])({},c),{},{type:f(c.type)}));case 3:return n.abrupt("return",n.sent);case 4:case"end":return n.stop()}}),n)}function y(e){return a.a.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.next=2,b({type:"updateState",payload:e});case 2:case"end":return t.stop()}}),r)}function E(e){return a.a.wrap((function(n){while(1)switch(n.prev=n.next){case 0:return n.next=2,t.select((t=>t[e||p]));case 2:return n.abrupt("return",n.sent);case 3:case"end":return n.stop()}}),l)}function w(){var e,n,r,o,s,l,d=arguments;return a.a.wrap((function(a){while(1)switch(a.prev=a.next){case 0:for(e=d.length,n=new Array(e),r=0;r<e;r++)n[r]=d[r];if(o=n[0],s=n.slice(1),!Object(i["a"])(o)){a.next=6;break}return a.next=5,t.select(o,...s);case 5:return a.abrupt("return",a.sent);case 6:return l=n[1],a.next=9,t.select((e=>{var t=e[l||p];return t&&o?Object(c["a"])(t,o):t}));case 9:return a.abrupt("return",a.sent);case 10:case"end":return a.stop()}}),u)}function x(){var e=arguments;return a.a.wrap((function(n){while(1)switch(n.prev=n.next){case 0:return n.next=2,t.call(...e);case 2:return n.abrupt("return",n.sent);case 3:case"end":return n.stop()}}),d)}return Object(o["a"])(Object(o["a"])({},t),{},{call:x,put:b,update:y,select:w,state:E,take:v})},E=Object(l["a"])(((e,t,n)=>{var r,a=y(e,t);return(null===n||void 0===n||null===(r=n.onCommands)||void 0===r?void 0:r.call(n,a,e))||a}));function w(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=(t,n,r)=>a.a.mark((function o(s){var c;return a.a.wrap((function(a){while(1)switch(a.prev=a.next){case 0:return a.next=2,t(s,E(r,n,e));case 2:if(c=s.callback,!Object(i["a"])(c)){a.next=6;break}return a.next=6,c();case 6:case"end":return a.stop()}}),o)})),n=e=>(t,n)=>{var r=n.type,a=void 0===r?"":r,o=b(a)||g(a)||e;return o(t,n)},r=(e,t,n)=>{var r;null===(r=e.preventDefault)||void 0===r||r.call(e);var a=null===n||void 0===n?void 0:n.effectArgs,o=Array.isArray(a)&&a.length>0?a[0]:{},s=o.__dva_reject;Object(i["a"])(s)?s(e):Promise.reject({error:e,extension:n})},o=e.onEffect,s=void 0===o?t:o,c=e.onReducer,l=void 0===c?n:c,p=e.onError,m=void 0===p?r:p;return Object(u["a"])({onEffect:s,onReducer:l,onError:m},d["a"])}var x,C,k=n("6LIB"),S=n("vRGJ"),A=n.n(S);x||(x={}),C||(C={});var O=(e,t)=>Object(k["a"])(e)?Object.entries(e):t?[[e,t]]:[];function j(e,t){var n=[],r=A()(e,n).exec(t);if(!r)return null;var a=r.slice(1);return n.reduce(((e,t,n)=>{var r=t.name;return Object(o["a"])(Object(o["a"])({},e),{},{[r]:a[n]})}),{})}var B=e=>(t,n)=>{var r,a=t.dispatch,s=t.history,c=(e,t)=>{var n=O(e,t);n.length&&(r=s.listen((e=>{var t=e.pathname,r=e.query;n.forEach((n=>{var s=Object(p["a"])(n,2),c=s[0],l=s[1],u=j(c,t);u&&(Object(i["a"])(l)?l(Object(o["a"])(Object(o["a"])({},e),{},{query:r||{},params:u})):Object(k["a"])(l)&&a(l))}))})))};return e(Object(o["a"])(Object(o["a"])({},t),{},{listen:c}),n),r},N=e=>Object.entries(e).reduce(((e,t)=>{var n=Object(p["a"])(t,2),r=n[0],a=n[1];return Object(o["a"])(Object(o["a"])({},e),{},{[r]:B(a)})}),{}),D=n("DkC/"),P=n("2PMq"),R=n.n(P);function M(){if(!window.g_app)try{var e,t;window.g_app=null===(e=(t=n("ArA+")).getDvaApp)||void 0===e?void 0:e.call(t)}catch(r){}return window.g_app}window.setTimeout(M,0);var G,I,L,z,_,T,q=function(e,t,n){var r,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=null===(r=M())||void 0===r?void 0:r._store;if(o){var s=o.dispatch({type:e,payload:t,operationType:n});if(R()(s))return s.catch((e=>{if(a)return e;throw e}))}};q.slient=(e,t,n)=>q(e,t,n,!0),G||(G={}),I||(I={}),L||(L={}),z||(z={}),_||(_={}),T||(T={});var J=(e,t)=>{var n="".concat(e).concat(m).concat(t),r=q.bind(null,n);return r.actionName=n,r.slient=q.slient.bind(null,n),r};function F(e){return Array.isArray(e)?e[0]:e}var U=(e,t)=>{var n=e.namespace,r=e.state,a=e.effects,s=e.reducers,i=J.bind(null,n),c=(null===t||void 0===t?void 0:t({dispatchApi:i}))||{},l=Object.keys(c).concat(Object.keys(a||{})).concat(Object.keys(Object(o["a"])(Object(o["a"])({},F(s)),f))),u=l.reduce(((e,t)=>Object(o["a"])(Object(o["a"])({},e),{},{[t]:c[t]||i(t)})),{});if(!Object(k["a"])(r))return u;var d=i("updateState"),p=i("state");return Object.keys(r).forEach((e=>{u["get".concat(Object(D["a"])(e))]=()=>p().then((t=>null===t||void 0===t?void 0:t[e])),u["set".concat(Object(D["a"])(e))]=t=>d({[e]:t})})),u},W=(e,t)=>{var n;return e.state=null!==(n=null!==t&&void 0!==t?t:e.state)&&void 0!==n?n:{},e.effects=Object(o["a"])(Object(o["a"])({},e.effects),h),e};function Y(e){return t=>W(t,e)}var V,$,H,K,Q=(e,t,n)=>{var r=W(e,t),a=U(r,n);return{model:r,api:a}};function Z(e){return(t,n)=>Q(t,e,n)}V||(V={}),$||($={}),H||(H={}),K||(K={})},0:function(e,t,n){e.exports=n("rjA5")},1:function(e,t){},"4y8k":function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return o}));var r=n("YS25"),a={basename:"/"};window.routerBase&&(a.basename=window.routerBase);var o=Object({NODE_ENV:"production"}).__IS_SERVER?null:Object(r["a"])(a),s=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return e||(o=Object(r["a"])(a)),o}},"6/j6":function(e){e.exports=JSON.parse('{"menus":{"en-US":{"*":[{"path":"/","title":"dva-plus - A dva plugin for better dva development experience with TypeScript.","meta":{"order":10}}],"/docs":[{"path":"/docs","title":"Getting Started","meta":{"order":1}},{"path":"/docs/examples","title":"Examples","meta":{"order":2}}]},"zh-CN":{"*":[{"path":"/zh-CN","title":"dva-plus - \u4e3a\u4e86\u66f4\u597d\u7684 dva \u5f00\u53d1\u4f53\u9a8c","meta":{"order":10}}],"/zh-CN/docs":[{"path":"/zh-CN/docs","title":"\u5feb\u901f\u4e0a\u624b","meta":{"order":1}},{"path":"/zh-CN/docs/examples","title":"\u6f14\u793a","meta":{"order":2}}]}},"locales":[{"name":"en-US","label":"English"},{"name":"zh-CN","label":"\u4e2d\u6587"}],"navs":{"en-US":[{"path":"/docs","title":"Docs","order":1},{"title":"GitHub","path":"https://github.com/anyesu/dva-plus"},{"title":"Changelog","path":"https://github.com/anyesu/dva-plus/releases"}],"zh-CN":[{"path":"/zh-CN/docs","title":"\u6587\u6863","order":1},{"title":"GitHub","path":"https://github.com/anyesu/dva-plus"},{"title":"\u66f4\u65b0\u65e5\u5fd7","path":"https://github.com/anyesu/dva-plus/releases"}]},"title":"dva-plus","mode":"site","repository":{"url":"https://github.com/anyesu/dva-plus","branch":"master"},"theme":{}}')},"8JGJ":function(e,t,n){"use strict";n.r(t);var r=n("q1tI"),a=n.n(r);n("dEAq");t["default"]=function(){return a.a.createElement(a.a.Fragment,null)}},"8hfw":function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n("LtsZ"),a=new r["Plugin"]({validKeys:["modifyClientRenderOpts","patchRoutes","rootContainer","render","onRouteChange","dva"]})},DaN3:function(e,t,n){"use strict";n.r(t);var r=n("q1tI"),a=n.n(r);n("dEAq");t["default"]=function(){return a.a.createElement(a.a.Fragment,null,a.a.createElement("div",{className:"markdown"},a.a.createElement(a.a.Fragment,{children:n("gql7").default()})))}},EK5R:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return h}));n("miYZ");var r,a,o=n("tsqr"),s=(n("+L6B"),n("2/Rp")),i=(n("/zsF"),n("PArb")),c=(n("BoS7"),n("Sdc0")),l=(n("bP8k"),n("gFTJ")),u=n("q1tI"),d=n.n(u),p=n("/MKj"),m=n("G9dC"),h=(n("wLAj"),r=Object(p["c"])((e=>{var t=e.loading,n=e.commands;return{loading:t,commands:n}})),r(a=class extends u["Component"]{render(){var e=this.props,t=e.loading,n=e.commands,r=!!t.models.commands,a=!!t.effects[m["b"].testSelect.actionName];return d.a.createElement(d.a.Fragment,null,d.a.createElement(l["b"],{bordered:!0},d.a.createElement(l["b"].Item,{label:"Model state"},JSON.stringify(n)),d.a.createElement(l["b"].Item,{label:"Loading status"},d.a.createElement(c["a"],{checked:r,unCheckedChildren:"model",checkedChildren:"model"}),d.a.createElement(c["a"],{checked:a,unCheckedChildren:"testSelect",checkedChildren:"testSelect",style:{marginLeft:16}}))),d.a.createElement(i["a"],{orientation:"left"},"Basic"),d.a.createElement(s["a"].Group,null,d.a.createElement(s["a"],{onClick:()=>m["b"].testPut()},"testPut"),d.a.createElement(s["a"],{onClick:()=>m["b"].testPut2()},"testPut2"),d.a.createElement(s["a"],{onClick:()=>m["b"].testCall()},"testCall"),d.a.createElement(s["a"],{onClick:()=>m["b"].testCall2()},"testCall2"),d.a.createElement(s["a"],{onClick:()=>m["b"].testSelect()},"testSelect"),d.a.createElement(s["a"],{onClick:()=>m["b"].testState().then(o["b"].info)},"testState"),d.a.createElement(s["a"],{onClick:()=>m["b"].testState2().then((e=>o["b"].info(JSON.stringify(e))))},"testState2"),d.a.createElement(s["a"],{onClick:()=>m["b"].testUpdate()},"testUpdate")),d.a.createElement(i["a"],{orientation:"left"},"Customize commands"),d.a.createElement(s["a"].Group,null,d.a.createElement(s["a"],{onClick:()=>m["b"].testShowResult(!0)},"testShowResult1"),d.a.createElement(s["a"],{onClick:()=>m["b"].testShowResult(!1)},"testShowResult2")))}})||a)},EUIJ:function(e,t,n){"use strict";n.r(t);var r=n("q1tI"),a=n.n(r),o=n("dEAq"),s=n("0zqC"),i=a.a.memo(n("zrGB").default["dumi-counter-1"].component),c=a.a.memo(n("zrGB").default["dumi-complex-1"].component),l=a.a.memo(n("zrGB").default["dumi-settergetter-1"].component),u=a.a.memo(n("zrGB").default["dumi-commands-1"].component),d=a.a.memo(n("zrGB").default["dumi-subscriptions-1"].component);t["default"]=function(){return a.a.createElement(a.a.Fragment,null,a.a.createElement(a.a.Fragment,null,a.a.createElement("div",{className:"markdown"},a.a.createElement("h2",{id:"\u57fa\u7840\u7528\u6cd5"},a.a.createElement(o["AnchorLink"],{to:"#\u57fa\u7840\u7528\u6cd5","aria-hidden":"true",tabIndex:-1},a.a.createElement("span",{className:["icon","icon-link"]})),"\u57fa\u7840\u7528\u6cd5")),a.a.createElement(s["default"],n("zrGB").default["dumi-counter-1"].previewerProps,a.a.createElement(i,null)),a.a.createElement("div",{className:"markdown"},a.a.createElement("h2",{id:"\u8fdb\u9636\u7528\u6cd5"},a.a.createElement(o["AnchorLink"],{to:"#\u8fdb\u9636\u7528\u6cd5","aria-hidden":"true",tabIndex:-1},a.a.createElement("span",{className:["icon","icon-link"]})),"\u8fdb\u9636\u7528\u6cd5")),a.a.createElement(s["default"],n("zrGB").default["dumi-complex-1"].previewerProps,a.a.createElement(c,null)),a.a.createElement("div",{className:"markdown"},a.a.createElement("h2",{id:"setget-\u8bbf\u95ee\u5668"},a.a.createElement(o["AnchorLink"],{to:"#setget-\u8bbf\u95ee\u5668","aria-hidden":"true",tabIndex:-1},a.a.createElement("span",{className:["icon","icon-link"]})),"set/get \u8bbf\u95ee\u5668")),a.a.createElement(s["default"],n("zrGB").default["dumi-settergetter-1"].previewerProps,a.a.createElement(l,null)),a.a.createElement("div",{className:"markdown"},a.a.createElement("h2",{id:"\u5185\u7f6e\u547d\u4ee4"},a.a.createElement(o["AnchorLink"],{to:"#\u5185\u7f6e\u547d\u4ee4","aria-hidden":"true",tabIndex:-1},a.a.createElement("span",{className:["icon","icon-link"]})),"\u5185\u7f6e\u547d\u4ee4")),a.a.createElement(s["default"],n("zrGB").default["dumi-commands-1"].previewerProps,a.a.createElement(u,null)),a.a.createElement("div",{className:"markdown"},a.a.createElement("h2",{id:"\u8def\u7531\u53d8\u5316\u8ba2\u9605"},a.a.createElement(o["AnchorLink"],{to:"#\u8def\u7531\u53d8\u5316\u8ba2\u9605","aria-hidden":"true",tabIndex:-1},a.a.createElement("span",{className:["icon","icon-link"]})),"\u8def\u7531\u53d8\u5316\u8ba2\u9605")),a.a.createElement(s["default"],n("zrGB").default["dumi-subscriptions-1"].previewerProps,a.a.createElement(d,null))))}},G9dC:function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"d",(function(){return p})),n.d(t,"b",(function(){return m}));n("2qtc");var r,a=n("kLXV"),o=(n("miYZ"),n("tsqr")),s=n("o0o1"),i=n.n(s),c=n("/7QA");r||(r={});var l=e=>new Promise((t=>setTimeout((()=>t(e)),1e3*e))),u=e=>({success:e,message:e?"success":"fail",data:e?"this is success content":"this is fail content",code:e?"200":"9999"}),d=Object(c["b"])({count:0})({namespace:"commands",effects:{testPut:i.a.mark((function e(t,n){var r,a;return i.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return r=n.put,a=Math.round(1e3*Math.random()),e.next=4,r("updateState",{count:a});case 4:case"end":return e.stop()}}),e)})),testPut2:i.a.mark((function e(t,n){var r,a;return i.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return r=n.put,a=Math.round(1e3*Math.random()),e.next=4,r({type:"updateState",payload:{count:a}});case 4:case"end":return e.stop()}}),e)})),testCall:i.a.mark((function e(t,n){var r,a,s,c;return i.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return r=n.call,e.delegateYield(r(l,1),"t0",2);case 2:return a=e.t0,e.next=5,r(l,3);case 5:return s=e.sent,e.next=8,l(2);case 8:c=e.sent,o["b"].info("testCall: ".concat(a," ").concat(s," ").concat(c));case 10:case"end":return e.stop()}}),e)})),testCall2:i.a.mark((function e(t,n){var r,a,s;return i.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return a=function(e){o["b"].info("call with context - ".concat(e," - ").concat(JSON.stringify(this)))},r=n.call,s={a:123,fn:a},e.delegateYield(r([s,a],"test1"),"t0",4);case 4:return e.delegateYield(r({context:s,fn:a},"test2"),"t1",5);case 5:return e.delegateYield(r([s,"fn"],"test3"),"t2",6);case 6:case"end":return e.stop()}}),e)})),testSelect:i.a.mark((function e(t,n){var r,a,s;return i.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return r=n.select,a=n.call,s=[],e.delegateYield(r(),"t0",3);case 3:return s[0]=e.t0,e.delegateYield(r("count"),"t1",5);case 5:return s[1]=e.t1,e.delegateYield(r("a.b.c"),"t2",7);case 7:return s[2]=e.t2,e.delegateYield(r("count2"),"t3",9);case 9:return s[3]=e.t3,e.delegateYield(r("enum","global"),"t4",11);case 11:return s[4]=e.t4,e.delegateYield(r("a.d.length","commands"),"t5",13);case 13:return s[5]=e.t5,e.delegateYield(r("enum","commands"),"t6",15);case 15:return s[6]=e.t6,e.delegateYield(r("enum.length","global"),"t7",17);case 17:return s[7]=e.t7,e.delegateYield(r("enum.length","global2"),"t8",19);case 19:return s[8]=e.t8,e.delegateYield(r(((e,t)=>(o["b"].info("select func: ".concat(t," ").concat(JSON.stringify(e.commands))),e.global.enum)),123),"t9",21);case 21:return s[9]=e.t9,o["b"].info("testSelect: [".concat(s.map((e=>JSON.stringify(e))).join(", "),"]")),e.delegateYield(a(l,1),"t10",24);case 24:case"end":return e.stop()}}),e)})),testState:i.a.mark((function e(t,n){var r,a,o;return i.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return r=n.state,e.delegateYield(r(),"t0",2);case 2:return a=e.t0,o=a.count,e.abrupt("return",o);case 5:case"end":return e.stop()}}),e)})),testState2:i.a.mark((function e(t,n){var r;return i.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return r=n.state,e.delegateYield(r("commands"),"t0",2);case 2:return e.delegateYield(r("global"),"t1",3);case 3:return e.abrupt("return",e.t1);case 4:case"end":return e.stop()}}),e)})),testUpdate:i.a.mark((function e(t,n){var r,a;return i.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return r=n.update,a=Math.round(1e3*Math.random()),e.next=4,r({count:a});case 4:case"end":return e.stop()}}),e)})),testShowResult:i.a.mark((function e(t,n){var r,o,s,c,l;return i.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return r=t.payload,o=n.showResult,s=u(r),e.next=5,o({response:s,showError:!1,onError(e){c=e.message,l=e.data,a["a"].error({title:c,content:l})}});case 5:case"end":return e.stop()}}),e)}))}}),p=d.model,m=d.api;t["c"]=p},GHxu:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return l}));var r,a,o=n("q1tI"),s=n.n(o),i=n("/MKj"),c=n("Io6j"),l=(r=Object(i["c"])((e=>{var t=e.counter.count;return{count:t}})),r(a=class extends o["Component"]{render(){return s.a.createElement("div",null,s.a.createElement("h2",null,this.props.count),s.a.createElement("button",{onClick:()=>c["a"].add(),"data-action":"plus"},"+"),s.a.createElement("button",{onClick:()=>c["a"].add(-1),"data-action":"minus"},"-"),s.a.createElement("button",{onClick:()=>c["a"].reset(),"data-action":"reset"},"reset"))}})||a)},Io6j:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("VTBJ"),a=n("o0o1"),o=n.n(a),s=n("/7QA"),i=Object(s["b"])()({namespace:"counter",state:{count:0},effects:{reset:o.a.mark((function e(t,n){var r;return o.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return r=n.update,e.next=3,r({count:0});case 3:case"end":return e.stop()}}),e)}))},reducers:{add:(e,t)=>{var n=t.payload;return Object(r["a"])(Object(r["a"])({},e),{},{count:((null===e||void 0===e?void 0:e.count)||0)+(n||1)})}}}),c=i.model,l=i.api;t["b"]=c},K8JR:function(e,t,n){"use strict";n.r(t);var r=n("q1tI"),a=n.n(r);n("dEAq");t["default"]=function(){return a.a.createElement(a.a.Fragment,null,a.a.createElement("div",{className:"markdown"},a.a.createElement(a.a.Fragment,{children:n("gql7").default()})))}},"W+ks":function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var r,a=n("HaE+"),o=n("VTBJ"),s=n("o0o1"),i=n.n(s),c=n("/7QA");r||(r={});var l=Object(c["b"])()({namespace:"global",state:{count:0,enum:"3"},effects:{count:i.a.mark((function(e,t){var n,r,a,o;return i.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=t.state,r=t.put,e.next=3,r("updateState",{enum:Math.round(3*Math.random()).toString()});case 3:return e.delegateYield(n(),"t0",4);case 4:return a=e.t0,o=a.count,e.abrupt("return",o);case 7:case"end":return e.stop()}}),o)})),testNoGenerator:e=>{var t=e.payload;return t}},reducers:{addCount:(e,t)=>{var n=t.payload;return Object(o["a"])(Object(o["a"])({},e),{},{count:((null===e||void 0===e?void 0:e.count)||0)+(n||1)})}}},(e=>{var t=e.dispatchApi;return{extraApi1(){var e=t("addCount");e(3)},extraApi2(e){return Object(a["a"])(i.a.mark((function t(){return i.a.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.next=2,d.addCount(e);case 2:return t.abrupt("return","haha");case 3:case"end":return t.stop()}}),t)})))()},extraApi3(e){return Object(a["a"])(i.a.mark((function t(){var n;return i.a.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.next=2,d.getCount();case 2:return n=t.sent,t.abrupt("return",d.updateState({count:(n||0)+e}));case 4:case"end":return t.stop()}}),t)})))()}}})),u=l.model,d=l.api},Xq7l:function(e,t,n){"use strict";n.d(t,"f",(function(){return r["b"]})),n.d(t,"i",(function(){return a["a"]})),n.d(t,"c",(function(){return o["c"]})),n.d(t,"j",(function(){return o["d"]})),n.d(t,"l",(function(){return o["f"]})),n.d(t,"k",(function(){return o["e"]})),n.d(t,"d",(function(){return s["b"]})),n.d(t,"a",(function(){return i["a"]})),n.d(t,"g",(function(){return i["d"]})),n.d(t,"b",(function(){return i["b"]})),n.d(t,"e",(function(){return c["b"]})),n.d(t,"h",(function(){return l["b"]}));var r=n("4y8k"),a=n("8hfw"),o=n("/MKj"),s=n("aJnU"),i=n("G9dC"),c=(n("Io6j"),n("W+ks")),l=n("sXcH");n("bGsh"),n("bl45")},aJnU:function(e,t,n){"use strict";n.d(t,"b",(function(){return g})),n.d(t,"a",(function(){return b}));var r=n("VTBJ"),a=n("q1tI"),o=n("LtsZ"),s=n("Hg0r"),i=n("Whig"),c=n("Xq7l"),l=n("G9dC"),u=n("Io6j"),d=n("W+ks"),p=n("sXcH"),m=n("bGsh"),h=n("bl45"),f=null;function v(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=c["i"].applyPlugins({key:"dva",type:o["ApplyPluginsType"].modify,initialValue:{}});return f=Object(s["a"])(Object(r["a"])(Object(r["a"])(Object(r["a"])({history:c["f"]},t.config||{}),"undefined"!==typeof window&&window.g_useSSR?{initialState:window.g_initialProps}:{}),e||{})),f.use(Object(i["a"])()),f.use(n("Quko")()),(t.plugins||[]).forEach((e=>{f.use(e)})),f.model(Object(r["a"])({namespace:"commands"},l["c"])),f.model(Object(r["a"])({namespace:"counter"},u["b"])),f.model(Object(r["a"])({namespace:"global"},d["a"])),f.model(Object(r["a"])({namespace:"other"},p["a"])),f.model(Object(r["a"])({namespace:"setterGetter"},m["b"])),f.model(Object(r["a"])({namespace:"subscriptions"},h["a"])),f}function g(){return f}class b extends a["Component"]{constructor(e){super(e),"undefined"!==typeof window&&v()}componentWillUnmount(){var e=g();e._models.forEach((t=>{e.unmodel(t.namespace)})),e._models=[];try{e=null}catch(t){console.error(t)}}render(){var e=g();return e.router((()=>this.props.children)),e.start()()}}},bGsh:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r,a=n("/7QA");r||(r={});var o=Object(a["b"])({count:0})({namespace:"setterGetter"}),s=o.model,i=o.api;t["b"]=s},bl45:function(e,t,n){"use strict";var r=n("/7QA");t["a"]=Object(r["a"])({namespace:"subscriptions",subscriptions:Object(r["e"])({setup:(e,t)=>{var n=e.dispatch,r=e.history,a=e.listen;t("test Error",{data:"test"}),a("/:path*",(e=>{var t=e.query,n=e.params;console.groupCollapsed&&(console.groupCollapsed("subscriptions: ".concat(n.path||"/")),console.log(r,t),console.groupEnd())})),a("/user/list",{type:"fetchUsers"}),a("/user/:id",{type:"fetchUser"}),a("/user/query",(e=>{var t=e.params;n({type:"fetchUsers",payload:t})})),a({"/user/list":()=>{},"/user/query":()=>{}})}})})},cXEf:function(e,t,n){"use strict";n.r(t);n("bl45");t["default"]=()=>"View logs in DevTools"},gql7:function(e,t,n){"use strict";n.r(t);var r=n("q1tI"),a=n.n(r),o=n("dEAq"),s=n("ZpkN");t["default"]=function(){return a.a.createElement(a.a.Fragment,null,a.a.createElement("div",{className:"markdown"},a.a.createElement("h1",{id:"welcome-to-dva-plus-"},a.a.createElement(o["AnchorLink"],{to:"#welcome-to-dva-plus-","aria-hidden":"true",tabIndex:-1},a.a.createElement("span",{className:["icon","icon-link"]})),"Welcome to dva-plus \ud83d\udc4b"),a.a.createElement("p",{align:"center"},a.a.createElement(o["Link"],{to:"https://npmcharts.com/compare/dva-plus?minimal=true"},a.a.createElement("img",{alt:"Downloads per month",src:"https://img.shields.io/npm/dm/dva-plus.svg",height:20})),a.a.createElement(o["Link"],{to:"https://www.npmjs.com/package/dva-plus"},a.a.createElement("img",{alt:"NPM Version",src:"https://img.shields.io/npm/v/dva-plus.svg",height:20})),a.a.createElement(o["Link"],{to:"https://david-dm.org/anyesu/dva-plus"},a.a.createElement("img",{alt:"Dependencies",src:"https://img.shields.io/david/anyesu/dva-plus.svg",height:20})),a.a.createElement(o["Link"],{to:"https://github.com/anyesu/dva-plus/graphs/contributors"},a.a.createElement("img",{alt:"Contributors",src:"https://img.shields.io/github/contributors/anyesu/dva-plus.svg",height:20})),a.a.createElement(o["Link"],{to:"https://github.com/anyesu/dva-plus"},a.a.createElement("img",{alt:"License",src:"https://github.com/anyesu/dva-plus/blob/main/LICENSE",height:20})),a.a.createElement(o["Link"],{to:"https://conventionalcommits.org/"},a.a.createElement("img",{alt:"Conventional Commits",src:"https://img.shields.io/badge/Conventional%20Commits-1.0.0-yellow.svg",height:20})),a.a.createElement(o["Link"],{to:"https://github.com/semantic-release/semantic-release"},a.a.createElement("img",{alt:"semantic-release",src:"https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg",height:20})),a.a.createElement(o["Link"],{to:"https://github.com/anyesu/dva-plus"},a.a.createElement("img",{alt:"visitors",src:"https://visitor-badge.glitch.me/badge?page_id=anyesu/dva-plus",height:20})),a.a.createElement(o["Link"],{to:"https://github.com/umijs/father"},a.a.createElement("img",{alt:"build with father",src:"https://img.shields.io/badge/build%20with-father--build-blue",height:20})),a.a.createElement(o["Link"],{to:"https://github.com/umijs/dumi"},a.a.createElement("img",{alt:"dumi",src:"https://img.shields.io/badge/docs%20by-dumi-blue",height:20}))),a.a.createElement("p",null,a.a.createElement(o["Link"],{to:"https://npmjs.org/package/dva-plus"},a.a.createElement("img",{src:"https://nodei.co/npm/dva-plus.png",alt:"dva-plus"}))),a.a.createElement("blockquote",null,a.a.createElement("p",null,"A dva plugin for better dva development experience with TypeScript")),a.a.createElement("p",null,a.a.createElement(o["AnchorLink"],{to:"#-features"})),a.a.createElement("h2",{id:"-features"},a.a.createElement(o["AnchorLink"],{to:"#-features","aria-hidden":"true",tabIndex:-1},a.a.createElement("span",{className:["icon","icon-link"]})),"\u2728 Features"),a.a.createElement("ul",null,a.a.createElement("li",null,"\u26a1 ",a.a.createElement("strong",null,"Easy to learn and use:")," Fully compatible with dva's usage"),a.a.createElement("li",null,"\ud83d\udce6 ",a.a.createElement("strong",null,"Out of the Box"),": A set of utilities"),a.a.createElement("li",null,"\ud83d\udca1 ",a.a.createElement("strong",null,"TypeScript:")," Complete type definition files"),a.a.createElement("li",null,"\ud83c\udf5a ",a.a.createElement("strong",null,"Support umi"))),a.a.createElement("details",null,a.a.createElement("summary",null,"\ud83d\udcd6 Table of Contents"),a.a.createElement("p",null,a.a.createElement(o["AnchorLink"],{to:"#table-of-contents"})),a.a.createElement("h2",{id:"table-of-contents"},a.a.createElement(o["AnchorLink"],{to:"#table-of-contents","aria-hidden":"true",tabIndex:-1},a.a.createElement("span",{className:["icon","icon-link"]})),"Table of Contents"),a.a.createElement("ul",null,a.a.createElement("li",null,a.a.createElement(o["AnchorLink"],{to:"#-features"},"\u2728 Features")),a.a.createElement("li",null,a.a.createElement(o["AnchorLink"],{to:"#-installation"},"\ud83d\udce6 Installation")),a.a.createElement("li",null,a.a.createElement(o["AnchorLink"],{to:"#-usage"},"\ud83d\ude80 Usage")),a.a.createElement("li",null,a.a.createElement(o["AnchorLink"],{to:"#-documentation"},"\ud83d\udcd6 Documentation")),a.a.createElement("li",null,a.a.createElement(o["AnchorLink"],{to:"#-contributing"},"\ud83d\udc65 Contributing")),a.a.createElement("li",null,a.a.createElement(o["AnchorLink"],{to:"#-show-your-support"},"\ud83d\ude4f Show your support")),a.a.createElement("li",null,a.a.createElement(o["AnchorLink"],{to:"#-license"},"\ud83d\udcdd License")))),a.a.createElement("p",null,a.a.createElement(o["AnchorLink"],{to:"#-installation"})),a.a.createElement("h2",{id:"-installation"},a.a.createElement(o["AnchorLink"],{to:"#-installation","aria-hidden":"true",tabIndex:-1},a.a.createElement("span",{className:["icon","icon-link"]})),"\ud83d\udce6 Installation"),a.a.createElement(s["a"],{code:"npm install dva-plus\n",lang:"shell"}),a.a.createElement("p",null,a.a.createElement(o["AnchorLink"],{to:"#-usage"})),a.a.createElement("h2",{id:"-usage"},a.a.createElement(o["AnchorLink"],{to:"#-usage","aria-hidden":"true",tabIndex:-1},a.a.createElement("span",{className:["icon","icon-link"]})),"\ud83d\ude80 Usage"),a.a.createElement("blockquote",null,a.a.createElement("p",null,"Make sure you have already understood the usage of dva ( ",a.a.createElement(o["Link"],{to:"https://dvajs.com/guide/getting-started.html"},"docs")," )")),a.a.createElement("ul",null,a.a.createElement("li",null,a.a.createElement("p",null,"create a model:"),a.a.createElement(s["a"],{code:"// @/models/counter.ts\n\nimport { Action, createModelAndApiWith } from 'dva-plus';\n\ndeclare module 'react-redux' {\n  // Use module augmentation to append DefaultRootState's type definition\n  // ref: https://www.typescriptlang.org/docs/handbook/declaration-merging.html#module-augmentation\n  export interface DefaultRootState {\n    counter: CounterState;\n  }\n}\n\ninterface CounterState {\n  count: number;\n}\n\nexport const { model, api } = createModelAndApiWith<CounterState>()({\n  namespace: 'counter',\n  state: { count: 0 },\n  effects: {\n    *reset(_, { update }) {\n      yield update({ count: 0 });\n    },\n  },\n  reducers: {\n    add(state, { payload }: Action<number | undefined>) {\n      return { ...state, count: (state?.count || 0) + (payload || 1) };\n    },\n  },\n});\n\nexport default model;\n",lang:"typescript"})),a.a.createElement("li",null,a.a.createElement("p",null,"use model without ",a.a.createElement("code",null,"dispatch")," :"),a.a.createElement(s["a"],{code:"// demo.tsx\n\nimport React, { Component } from 'react';\nimport { connect } from 'dva';\nimport { api } from '@/models/counter';\n\ninterface Props {\n  count?: number;\n}\n\n@connect<Props>(({ counter: { count } }) => ({ count }))\nexport default class extends Component<Props> {\n  render() {\n    return (\n      <div>\n        <h2>{this.props.count}</h2>\n        <button onClick={() => api.add()}>+</button>\n        <button onClick={() => api.add(-1)}>-</button>\n        <button onClick={() => api.reset()}>reset</button>\n      </div>\n    );\n  }\n}\n",lang:"typescript"}))),a.a.createElement("p",null,a.a.createElement(o["AnchorLink"],{to:"#-documentation"})),a.a.createElement("h2",{id:"-documentation"},a.a.createElement(o["AnchorLink"],{to:"#-documentation","aria-hidden":"true",tabIndex:-1},a.a.createElement("span",{className:["icon","icon-link"]})),"\ud83d\udcd6 Documentation"),a.a.createElement("p",null,"\ud83d\udc49 The full documentation and demos are available ",a.a.createElement(o["Link"],{to:"https://dva-plus.js.org/"},"here"),"."),a.a.createElement("p",null,a.a.createElement(o["AnchorLink"],{to:"#-contributing"})),a.a.createElement("h2",{id:"-contributing"},a.a.createElement(o["AnchorLink"],{to:"#-contributing","aria-hidden":"true",tabIndex:-1},a.a.createElement("span",{className:["icon","icon-link"]})),"\ud83d\udc65 Contributing"),a.a.createElement("table",null,a.a.createElement("thead",null,a.a.createElement("tr",null,a.a.createElement("th",{align:"center"},a.a.createElement(o["Link"],{to:"https://github.com/anyesu"},a.a.createElement("img",{alt:"anyesu",src:"https://avatars0.githubusercontent.com/u/13103906?v=4",width:100}))),a.a.createElement("th",{align:"center"},a.a.createElement(o["Link"],{to:"https://github.com/anyesu/dva-plus/blob/main/CONTRIBUTING.md"},a.a.createElement("img",{alt:"You?",src:"https://joeschmoe.io/api/v1/random",width:100}))))),a.a.createElement("tbody",null,a.a.createElement("tr",null,a.a.createElement("td",{align:"center"},a.a.createElement(o["Link"],{to:"https://github.com/anyesu"},"anyesu")),a.a.createElement("td",{align:"center"},a.a.createElement(o["Link"],{to:"https://github.com/anyesu/dva-plus/blob/main/CONTRIBUTING.md"},"You?"))),a.a.createElement("tr",null,a.a.createElement("td",{align:"center"},"\ud83d\udd25"),a.a.createElement("td",{align:"center"})))),a.a.createElement("p",null,"Contributions, issues and feature requests are welcome!",a.a.createElement("br",null),"Feel free to check ",a.a.createElement(o["Link"],{to:"https://github.com/anyesu/dva-plus/issues"},"issues page"),". You can also take a look at the ",a.a.createElement(o["Link"],{to:"https://github.com/anyesu/dva-plus/blob/main/CONTRIBUTING.md"},"contributing guide"),"."),a.a.createElement("p",null,a.a.createElement(o["AnchorLink"],{to:"#-show-your-support"})),a.a.createElement("h2",{id:"-show-your-support"},a.a.createElement(o["AnchorLink"],{to:"#-show-your-support","aria-hidden":"true",tabIndex:-1},a.a.createElement("span",{className:["icon","icon-link"]})),"\ud83d\ude4f Show your support"),a.a.createElement("p",null,"Give a \u2b50\ufe0f if this project helped you!"),a.a.createElement("p",null,a.a.createElement(o["AnchorLink"],{to:"#-license"})),a.a.createElement("h2",{id:"-license"},a.a.createElement(o["AnchorLink"],{to:"#-license","aria-hidden":"true",tabIndex:-1},a.a.createElement("span",{className:["icon","icon-link"]})),"\ud83d\udcdd License"),a.a.createElement("p",null,"Copyright \xa9 2020 ",a.a.createElement(o["Link"],{to:"https://github.com/anyesu"},"anyesu"),".",a.a.createElement("br",null),"This project is ",a.a.createElement(o["Link"],{to:"https://github.com/anyesu/dva-plus/blob/main/LICENSE"},"MIT")," licensed."),a.a.createElement("hr",null),a.a.createElement("p",null,a.a.createElement("em",null,"This README was generated with \u2764\ufe0f by ",a.a.createElement(o["Link"],{to:"https://github.com/andreasbm/readme"},"@appnest/readme")))))}},jqvo:function(e,t,n){"use strict";n.r(t);var r=n("q1tI"),a=n.n(r);n("dEAq");t["default"]=function(){return a.a.createElement(a.a.Fragment,null)}},lF6S:function(e){e.exports=JSON.parse("{}")},q5zh:function(e,t,n){"use strict";n.r(t);var r=n("q1tI"),a=n.n(r),o=n("dEAq"),s=n("0zqC"),i=a.a.memo(n("zrGB").default["dumi-counter"].component),c=a.a.memo(n("zrGB").default["dumi-complex"].component),l=a.a.memo(n("zrGB").default["dumi-settergetter"].component),u=a.a.memo(n("zrGB").default["dumi-commands"].component),d=a.a.memo(n("zrGB").default["dumi-subscriptions"].component);t["default"]=function(){return a.a.createElement(a.a.Fragment,null,a.a.createElement(a.a.Fragment,null,a.a.createElement("div",{className:"markdown"},a.a.createElement("h2",{id:"basic"},a.a.createElement(o["AnchorLink"],{to:"#basic","aria-hidden":"true",tabIndex:-1},a.a.createElement("span",{className:["icon","icon-link"]})),"Basic")),a.a.createElement(s["default"],n("zrGB").default["dumi-counter"].previewerProps,a.a.createElement(i,null)),a.a.createElement("div",{className:"markdown"},a.a.createElement("h2",{id:"advanced"},a.a.createElement(o["AnchorLink"],{to:"#advanced","aria-hidden":"true",tabIndex:-1},a.a.createElement("span",{className:["icon","icon-link"]})),"Advanced")),a.a.createElement(s["default"],n("zrGB").default["dumi-complex"].previewerProps,a.a.createElement(c,null)),a.a.createElement("div",{className:"markdown"},a.a.createElement("h2",{id:"settergetter"},a.a.createElement(o["AnchorLink"],{to:"#settergetter","aria-hidden":"true",tabIndex:-1},a.a.createElement("span",{className:["icon","icon-link"]})),"SetterGetter")),a.a.createElement(s["default"],n("zrGB").default["dumi-settergetter"].previewerProps,a.a.createElement(l,null)),a.a.createElement("div",{className:"markdown"},a.a.createElement("h2",{id:"commands"},a.a.createElement(o["AnchorLink"],{to:"#commands","aria-hidden":"true",tabIndex:-1},a.a.createElement("span",{className:["icon","icon-link"]})),"Commands")),a.a.createElement(s["default"],n("zrGB").default["dumi-commands"].previewerProps,a.a.createElement(u,null)),a.a.createElement("div",{className:"markdown"},a.a.createElement("h2",{id:"subscriptions"},a.a.createElement(o["AnchorLink"],{to:"#subscriptions","aria-hidden":"true",tabIndex:-1},a.a.createElement("span",{className:["icon","icon-link"]})),"Subscriptions")),a.a.createElement(s["default"],n("zrGB").default["dumi-subscriptions"].previewerProps,a.a.createElement(d,null))))}},rjA5:function(e,t,n){"use strict";n.r(t);var r={};n.r(r),n.d(r,"rootContainer",(function(){return l}));n("Xn8V"),n("6spV"),n("wpse"),n("KUpu"),n("8OGu"),n("n7Qr"),n("VQRL"),n("SGZ1"),n("nEGZ"),n("IC/V"),n("H8Ov"),n("aHGi"),n("0O5u"),n("5qeZ"),n("NYJX"),n("mLN8"),n("YJpY"),n("7V/p"),n("dLjG"),n("fF/C"),n("CDr+"),n("FbcW"),n("wwZZ"),n("+l9e"),n("vnQr"),n("5Blz"),n("X6vt"),n("hilM"),n("wdPq"),n("u6eR"),n("v/6r"),n("fDrP"),n("1vuE"),n("Q3OH"),n("nDqD"),n("4rKd"),n("X5kU"),n("4Mzw"),n("Pp3M"),n("v0/P"),n("sdAH"),n("EgRx"),n("izsi"),n("xtlo"),n("p1ln"),n("ZahQ"),n("nZC5"),n("HjuX"),n("A9H8"),n("B/G0"),n("Dyhc"),n("WQuA"),n("Qqe/"),n("J428"),n("s1ay"),n("Rw1i"),n("quHW"),n("YjZU"),n("O9az"),n("2KAr"),n("3dhw"),n("zTPR"),n("rpUR"),n("9/ry"),n("z9fm"),n("43iI"),n("mcGr"),n("rUU2"),n("6cL7"),n("ZDb2"),n("EOz7"),n("JI6M"),n("beyn"),n("A+b4"),n("3Us1"),n("eP3D"),n("Mn2j"),n("BtTS"),n("yiTY"),n("Uc1W"),n("y36+"),n("gweS"),n("URK0"),n("1jPx"),n("8Lo7"),n("I5+W"),n("ti1D"),n("NQz/"),n("UHn5"),n("/vMi"),n("nkhd"),n("+u1y"),n("9BQv"),n("Tz1E"),n("U9fH"),n("+4le"),n("jIZW"),n("oYEA"),n("7yTQ"),n("jHRr"),n("Rka6"),n("8Ubs"),n("FK48"),n("Auwt"),n("KAxK"),n("/0sN"),n("VvX1"),n("2aV/"),n("aKtI"),n("VUky"),n("9bAj"),n("xF6R"),n("Dbv2"),n("KHCi"),n("i/DM"),n("hYqy"),n("JXee"),n("+Hw1"),n("FBts"),n("3UWB"),n("S5nV"),n("xD7I"),n("aNdP"),n("UIoa"),n("Osgv"),n("FKIO"),n("Sf9Y"),n("VuYY"),n("ue5M"),n("80Z6"),n("qkSU"),n("xaQh"),n("GPZX"),n("eCow"),n("/R3g"),n("0pSW"),n("85tw"),n("UvYY"),n("DVoG"),n("aLaE"),n("fQri"),n("RDHo"),n("9Rzw"),n("iMhB"),n("/mKc"),n("u6Ie"),n("9znl"),n("+GPJ"),n("haHa"),n("RhWa"),n("PUJJ"),n("YceZ"),n("jksQ"),n("FuvP"),n("Uq4z"),n("+2a4"),n("Gw+j"),n("CO2k"),n("rVgK"),n("ecuC"),n("HQPm"),n("IbaC"),n("s00F"),n("V0Bj"),n("hwEL"),n("d/5L"),n("oJGl"),n("6FCX"),n("OAmA"),n("p6E5"),n("Xxk+"),n("L5O0"),n("bcvT"),n("CRpX"),n("aRU8"),n("p5yU"),n("dnZx"),n("NMu4"),n("5JgN"),n("VWci");var a=n("8hfw"),o=n("wLAj"),s=n("q1tI"),i=n.n(s),c=n("aJnU");function l(e){return i.a.createElement(c["a"],null,e)}a["a"].register({apply:o,path:"K:/github/anyesu/dva-plus2/dumi/src/app.ts"}),a["a"].register({apply:r,path:"K:/github/anyesu/dva-plus2/dumi/src/.umi-production/plugin-dva/runtime.tsx"});var u=n("4y8k"),d=n("LtsZ"),p=n("zlVK");function m(){var e=[{path:"/~demos/:uuid",layout:!1,wrappers:[n("KcUY").default],component:e=>{var t=n("q1tI"),r=n("F4QJ").default(e);switch(r.length){case 1:return r[0];case 2:return t.createElement(n("0zqC").default,r[0],r[1]);default:return"Demo ".concat(uuid," not found :(")}}},{path:"/_demos/:uuid",redirect:"/~demos/:uuid"},{__dumiRoot:!0,layout:!1,path:"/",wrappers:[n("KcUY").default,n("JBu9").default],routes:[{path:"/",component:n("8JGJ").default,exact:!0,meta:{filePath:"docs/index.md",updatedTime:1609654797e3,title:"dva-plus - A dva plugin for better dva development experience with TypeScript.",order:10,hero:{title:"dva-plus",desc:'<div class="markdown"><p>\ud83d\udee0\ufe0f A dva plugin for better dva development experience with TypeScript.</p></div>',actions:[{text:"Getting Started",link:"/docs"}]},footer:'<div class="markdown"><p>Open-source MIT Licensed | Copyright \xa9 2020-present<br />Powered by <a href="https://d.umijs.org/" target="_blank">dumi<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="__dumi-default-external-link-icon"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path><polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a></p></div>',slugs:[]},title:"dva-plus - A dva plugin for better dva development experience with TypeScript."},{path:"/zh-CN",component:n("jqvo").default,exact:!0,meta:{filePath:"docs/index.zh-CN.md",updatedTime:1609654797e3,title:"dva-plus - \u4e3a\u4e86\u66f4\u597d\u7684 dva \u5f00\u53d1\u4f53\u9a8c",order:10,hero:{title:"dva-plus",desc:'<div class="markdown"><p>\ud83d\udee0\ufe0f \u4e3a\u4e86\u66f4\u597d\u7684 dva \u5f00\u53d1\u4f53\u9a8c</p></div>',actions:[{text:"\u5feb\u901f\u4e0a\u624b",link:"/zh-CN/docs"}]},footer:'<div class="markdown"><p>Open-source MIT Licensed | Copyright \xa9 2020-present<br />Powered by <a href="https://d.umijs.org/" target="_blank">dumi<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="__dumi-default-external-link-icon"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path><polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a></p></div>',slugs:[],locale:"zh-CN"},title:"dva-plus - \u4e3a\u4e86\u66f4\u597d\u7684 dva \u5f00\u53d1\u4f53\u9a8c"},{path:"/docs/examples",component:n("q5zh").default,exact:!0,meta:{filePath:"docs/docs/examples.md",updatedTime:1611241353e3,title:"Examples",order:2,toc:"menu",slugs:[{depth:2,value:"Basic",heading:"basic"},{depth:2,value:"Advanced",heading:"advanced"},{depth:2,value:"SetterGetter",heading:"settergetter"},{depth:2,value:"Commands",heading:"commands"},{depth:2,value:"Subscriptions",heading:"subscriptions"}],nav:{path:"/docs",title:"Docs"}},title:"Examples"},{path:"/zh-CN/docs/examples",component:n("EUIJ").default,exact:!0,meta:{filePath:"docs/docs/examples.zh-CN.md",updatedTime:1611834605e3,title:"\u6f14\u793a",order:2,toc:"menu",slugs:[{depth:2,value:"\u57fa\u7840\u7528\u6cd5",heading:"\u57fa\u7840\u7528\u6cd5"},{depth:2,value:"\u8fdb\u9636\u7528\u6cd5",heading:"\u8fdb\u9636\u7528\u6cd5"},{depth:2,value:"set/get \u8bbf\u95ee\u5668",heading:"setget-\u8bbf\u95ee\u5668"},{depth:2,value:"\u5185\u7f6e\u547d\u4ee4",heading:"\u5185\u7f6e\u547d\u4ee4"},{depth:2,value:"\u8def\u7531\u53d8\u5316\u8ba2\u9605",heading:"\u8def\u7531\u53d8\u5316\u8ba2\u9605"}],locale:"zh-CN",nav:{path:"/zh-CN/docs",title:"\u6587\u6863"}},title:"\u6f14\u793a"},{path:"/docs",component:n("DaN3").default,exact:!0,meta:{filePath:"docs/docs/index.md",updatedTime:1610603152e3,title:"Getting Started",order:1,nav:{title:"Docs",order:1,path:"/docs"},slugs:[{depth:1,value:"Welcome to dva-plus \ud83d\udc4b",heading:"welcome-to-dva-plus-"},{depth:2,value:"\u2728 Features",heading:"-features"},{depth:2,value:"Table of Contents",heading:"table-of-contents"},{depth:2,value:"\ud83d\udce6 Installation",heading:"-installation"},{depth:2,value:"\ud83d\ude80 Usage",heading:"-usage"},{depth:2,value:"\ud83d\udcd6 Documentation",heading:"-documentation"},{depth:2,value:"\ud83d\udc65 Contributing",heading:"-contributing"},{depth:2,value:"\ud83d\ude4f Show your support",heading:"-show-your-support"},{depth:2,value:"\ud83d\udcdd License",heading:"-license"}]},title:"Getting Started"},{path:"/zh-CN/docs",component:n("K8JR").default,exact:!0,meta:{filePath:"docs/docs/index.zh-CN.md",updatedTime:1610603152e3,title:"\u5feb\u901f\u4e0a\u624b",order:1,nav:{title:"\u6587\u6863",order:1,path:"/zh-CN/docs"},slugs:[{depth:1,value:"Welcome to dva-plus \ud83d\udc4b",heading:"welcome-to-dva-plus-"},{depth:2,value:"\u2728 Features",heading:"-features"},{depth:2,value:"Table of Contents",heading:"table-of-contents"},{depth:2,value:"\ud83d\udce6 Installation",heading:"-installation"},{depth:2,value:"\ud83d\ude80 Usage",heading:"-usage"},{depth:2,value:"\ud83d\udcd6 Documentation",heading:"-documentation"},{depth:2,value:"\ud83d\udc65 Contributing",heading:"-contributing"},{depth:2,value:"\ud83d\ude4f Show your support",heading:"-show-your-support"},{depth:2,value:"\ud83d\udcdd License",heading:"-license"}],locale:"zh-CN"},title:"\u5feb\u901f\u4e0a\u624b"}],title:"dva-plus",component:e=>e.children}];return a["a"].applyPlugins({key:"patchRoutes",type:d["ApplyPluginsType"].event,args:{routes:e}}),e}var h=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return a["a"].applyPlugins({key:"render",type:d["ApplyPluginsType"].compose,initialValue:()=>{var t=a["a"].applyPlugins({key:"modifyClientRenderOpts",type:d["ApplyPluginsType"].modify,initialValue:{routes:e.routes||m(),plugin:a["a"],history:Object(u["a"])(e.hot),isServer:Object({NODE_ENV:"production"}).__IS_SERVER,rootElement:"root",defaultTitle:"dva-plus"}});return Object(p["renderClient"])(t)},args:e})},f=h();t["default"]=f();window.g_umi={version:"3.3.3"}},sXcH:function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return c}));n("miYZ");var r,a=n("tsqr"),o=n("/7QA");r||(r={});var s="other",i=Object(o["c"])()({namespace:s,state:{count:0},reducers:[{test:(e,t)=>{var n=t.payload,r=t.operationType;return a["b"].info("reducers[test]: ".concat(n," ").concat(r)),e}},e=>(console.debug("onReducer hook",e),(t,n)=>{var r;return(null===(r=n.type)||void 0===r?void 0:r.startsWith("".concat(s,"/")))&&(a["b"].info("onReducer-state: ".concat(JSON.stringify(t))),a["b"].info("onReducer-action: ".concat(JSON.stringify(n)))),e(t,n)})]}),c=Object(o["f"])(i)},wLAj:function(e,t,n){"use strict";n.r(t),n.d(t,"dva",(function(){return p}));var r=n("VTBJ"),a=n("o0o1"),o=n.n(a),s=(n("2qtc"),n("kLXV")),i=(n("miYZ"),n("tsqr")),c=n("gSGL"),l=n("6LIB"),u=n("vJtL"),d=n("/7QA"),p={plugins:[Object(d["d"])({onCommands(e){var t=e.put,n=o.a.mark((function e(n){var r,a,d,p,m,h,f,v,g,b;return o.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:if(r=n.response,a=n.showSuccess,d=void 0===a||a,p=n.onSuccess,m=n.showError,h=void 0===m||m,f=n.onError,v=r.success,g=void 0!==v&&v,b=r.message,!g){e.next=19;break}if(d&&i["b"].success(b),!Object(c["a"])(p)){e.next=9;break}return e.next=7,t({type:p,payload:r});case 7:e.next=17;break;case 9:if(!Object(l["a"])(p)){e.next=14;break}return e.next=12,t(p,r);case 12:e.next=17;break;case 14:if(!Object(u["a"])(p)){e.next=17;break}return e.next=17,p(r);case 17:e.next=26;break;case 19:if(!h){e.next=23;break}s["a"].error({title:b,onOk:()=>null===f||void 0===f?void 0:f(r)}),e.next=26;break;case 23:if(!Object(u["a"])(f)){e.next=26;break}return e.next=26,f(r);case 26:case"end":return e.stop()}}),e)}));return Object(r["a"])(Object(r["a"])({},e),{},{showResult:n})}})]}},wkF6:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return S}));n("5NDa");var r,a,o=n("5rEg"),s=(n("+L6B"),n("2/Rp")),i=(n("/zsF"),n("PArb")),c=(n("bP8k"),n("gFTJ")),l=n("o0o1"),u=n.n(l),d=n("HaE+"),p=(n("miYZ"),n("tsqr")),m=n("q1tI"),h=n.n(m),f=n("/MKj"),v=n("W+ks"),g=n("sXcH");n("wLAj");console.debug("globalApi",v["b"],v["b"].addCount);var b=()=>{v["b"].addCount(2)},y=()=>{v["b"].count().then((function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];p["b"].info("globalApi.getCount: ".concat(JSON.stringify(t)))}))},E=function(){var e=Object(d["a"])(u.a.mark((function e(){return u.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:v["b"].updateState({count:1,enum:"1"});case 1:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),w=()=>{v["b"].extraApi1()},x=e=>{v["b"].extraApi3(Number(e))},C=function(){var e=Object(d["a"])(u.a.mark((function e(){var t;return u.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,v["b"].testNoGenerator(Math.round(1e3*Math.random()));case 2:t=e.sent,p["b"].info("globalApi.testNoGenerator: ".concat(t));case 4:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),k=()=>{g["b"].test("test","testType")},S=(r=Object(f["c"])((e=>{var t=e.global;return{global:t}})),r(a=class extends m["Component"]{render(){return h.a.createElement(h.a.Fragment,null,h.a.createElement(c["b"],{bordered:!0},h.a.createElement(c["b"].Item,{label:"Model state"},JSON.stringify(this.props.global))),h.a.createElement(i["a"],{orientation:"left"},"Basic"),h.a.createElement(s["a"].Group,null,h.a.createElement(s["a"],{onClick:b},"addCount"),h.a.createElement(s["a"],{onClick:y},"showCount"),h.a.createElement(s["a"],{onClick:E},"resetCount")),h.a.createElement(i["a"],{orientation:"left"},"ExtraApi"),h.a.createElement(s["a"],{onClick:w},"extraApi1"),h.a.createElement(o["a"].Search,{placeholder:"input",enterButton:"extraApi2",type:"number",onSearch:x,defaultValue:1,style:{width:300,marginLeft:16}}),h.a.createElement(i["a"],{orientation:"left"},"Others"),h.a.createElement(s["a"].Group,null,h.a.createElement(s["a"],{onClick:C},"testNoGenerator"),h.a.createElement(s["a"],{onClick:k},"testOther")))}})||a)},ytAz:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return g}));n("5NDa");var r,a,o=n("5rEg"),s=(n("+L6B"),n("2/Rp")),i=n("o0o1"),c=n.n(i),l=(n("miYZ"),n("tsqr")),u=n("HaE+"),d=(n("/zsF"),n("PArb")),p=(n("bP8k"),n("gFTJ")),m=n("q1tI"),h=n.n(m),f=n("/MKj"),v=n("bGsh"),g=(r=Object(f["c"])((e=>{var t=e.setterGetter;return{setterGetter:t}})),r(a=class extends m["Component"]{render(){var e;return h.a.createElement(h.a.Fragment,null,h.a.createElement(p["b"],{bordered:!0},h.a.createElement(p["b"].Item,{label:"count",contentStyle:{width:"50%"}},null===(e=this.props.setterGetter)||void 0===e?void 0:e.count)),h.a.createElement(d["a"],null),h.a.createElement(s["a"],{onClick:Object(u["a"])(c.a.mark((function e(){var t;return c.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,v["a"].getCount();case 2:t=e.sent,l["b"].info(t);case 4:case"end":return e.stop()}}),e)})))},"get count"),h.a.createElement(o["a"].Search,{placeholder:"random if empty",enterButton:"set count",type:"number",onSearch:e=>{var t=Number(""===e?Math.round(100*Math.random()):e);v["a"].setCount(t)},style:{width:300,marginLeft:16}}))}})||a)},zrGB:function(e,t,n){"use strict";n.r(t),t["default"]={"dumi-counter":{component:n("GHxu").default,previewerProps:{sources:{_:{tsx:"import React, { Component } from 'react';\r\nimport { connect } from 'dva';\r\nimport { api } from '../models/counter';\r\n\r\ninterface Props {\r\n  count?: number;\r\n}\r\n\r\n@connect<Props>(({ counter: { count } }) => ({ count }))\r\nexport default class extends Component<Props> {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>{this.props.count}</h2>\r\n        <button onClick={() => api.add()} data-action=\"plus\">\r\n          +\r\n        </button>\r\n        <button onClick={() => api.add(-1)} data-action=\"minus\">\r\n          -\r\n        </button>\r\n        <button onClick={() => api.reset()} data-action=\"reset\">\r\n          reset\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"},"models/counter.ts":{import:"../models/counter",content:"import { Action, createModelAndApiWith } from 'dva-plus';\n\ndeclare module 'react-redux' {\n  // Use module augmentation to append DefaultRootState's type definition\n  // ref: https://www.typescriptlang.org/docs/handbook/declaration-merging.html#module-augmentation\n  export interface DefaultRootState {\n    counter: CounterState;\n  }\n}\n\ninterface CounterState {\n  count: number;\n}\n\nexport const { model, api } = createModelAndApiWith<CounterState>()({\n  namespace: 'counter',\n  state: { count: 0 },\n  effects: {\n    reset: function* (_, { update }) {\n      yield update({ count: 0 });\n    },\n  },\n  reducers: {\n    add: (state, { payload }: Action<number | undefined>) => {\n      return { ...state, count: (state?.count || 0) + (payload || 1) };\n    },\n  },\n});\n\nexport default model;\n"}},dependencies:{react:{version:"^16.8.4"},dva:{version:"2.6.0-beta.20"},"react-dom":{version:"^16.8.4"}},title:"Basic","title.zh-CN":"\u57fa\u672c\u7528\u6cd5",motions:["autoplay",'click:[data-action="plus"]',"timeout:500",'click:[data-action="plus"]',"timeout:500",'click:[data-action="plus"]',"timeout:500",'click:[data-action="minus"]',"timeout:1000",'click:[data-action="reset"]'],description:'<div class="markdown"><p>This is a basic example of the <code>counter</code></p></div>',"description.zh-CN":'<div class="markdown"><p>\u8fd9\u662f <code>\u8ba1\u6570\u5668</code> \u7ec4\u4ef6\u7684\u57fa\u7840\u793a\u4f8b</p></div>',identifier:"dumi-counter"}},"dumi-complex":{component:n("wkF6").default,previewerProps:{sources:{_:{tsx:"import React, { Component } from 'react';\r\nimport { connect } from 'dva';\r\nimport { Button, Descriptions, Divider, Input, message } from 'antd';\r\nimport { DefaultRootState } from 'react-redux';\r\nimport { globalApi } from '../models/global';\r\nimport { otherApi } from '../models/other';\r\nimport '../app';\r\n\r\nconsole.debug('globalApi', globalApi, globalApi.addCount);\r\n\r\ninterface Props extends Partial<DefaultRootState> {}\r\n\r\nconst addCount = () => {\r\n  globalApi.addCount(2);\r\n};\r\n\r\nconst showCount = () => {\r\n  globalApi.count().then((...args) => {\r\n    message.info(`globalApi.getCount: ${JSON.stringify(args)}`);\r\n  });\r\n};\r\n\r\nconst resetCount = async () => {\r\n  globalApi.updateState({ count: 1, enum: '1' });\r\n};\r\n\r\nconst extraApi1 = () => {\r\n  globalApi.extraApi1();\r\n};\r\n\r\nconst extraApi2 = (val: string) => {\r\n  globalApi.extraApi3(Number(val));\r\n};\r\n\r\nconst testNoGenerator = async () => {\r\n  const result = await globalApi.testNoGenerator(Math.round(Math.random() * 1000));\r\n  message.info(`globalApi.testNoGenerator: ${result}`);\r\n};\r\n\r\nconst testOther = () => {\r\n  otherApi.test('test', 'testType');\r\n};\r\n\r\n@connect<Props>(({ global }) => ({ global }))\r\nexport default class extends Component<Props> {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Descriptions bordered>\r\n          <Descriptions.Item label=\"Model state\">\r\n            {JSON.stringify(this.props.global)}\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n        <Divider orientation=\"left\">Basic</Divider>\r\n        <Button.Group>\r\n          <Button onClick={addCount}>addCount</Button>\r\n          <Button onClick={showCount}>showCount</Button>\r\n          <Button onClick={resetCount}>resetCount</Button>\r\n        </Button.Group>\r\n        <Divider orientation=\"left\">ExtraApi</Divider>\r\n        <Button onClick={extraApi1}>extraApi1</Button>\r\n        <Input.Search\r\n          placeholder=\"input\"\r\n          enterButton=\"extraApi2\"\r\n          type=\"number\"\r\n          onSearch={extraApi2}\r\n          defaultValue={1}\r\n          style={{ width: 300, marginLeft: 16 }}\r\n        />\r\n        <Divider orientation=\"left\">Others</Divider>\r\n        <Button.Group>\r\n          <Button onClick={testNoGenerator}>testNoGenerator</Button>\r\n          <Button onClick={testOther}>testOther</Button>\r\n        </Button.Group>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"},"models/global.ts":{import:"../models/global",content:"import { Action, createModelAndApiWith } from 'dva-plus';\r\n\r\n// TODO Export these to help IDEA to resolve types\r\nexport namespace State {}\r\n\r\nexport const { model, api } = createModelAndApiWith<State>()(\r\n  {\r\n    namespace: 'global' as const,\r\n    state: { count: 0, enum: '3' },\r\n    effects: {\r\n      // use `property` not `shorthand method` to help IDEA to resolve types\r\n      count: function* (_: Action<undefined>, { state, put }) {\r\n        yield put('updateState', { enum: Math.round(Math.random() * 3).toString() as any });\r\n        const { count } = yield* state();\r\n        return count;\r\n      },\r\n      testNoGenerator: ({ payload }: Action<number | string>) => payload,\r\n    },\r\n    reducers: {\r\n      addCount: (state, { payload }: Action<number | null>) => {\r\n        return { ...state, count: (state?.count || 0) + (payload || 1) };\r\n      },\r\n    },\r\n  },\r\n  ({ dispatchApi }) => ({\r\n    extraApi1() {\r\n      const addCount = dispatchApi('addCount');\r\n      addCount(3);\r\n    },\r\n    async extraApi2(delta: number) {\r\n      await api.addCount(delta);\r\n      return 'haha' as const;\r\n    },\r\n    async extraApi3(delta: number) {\r\n      const count = await api.getCount();\r\n      return api.updateState({ count: (count || 0) + delta });\r\n    },\r\n  }),\r\n);\r\n\r\nexport { model as default, api as globalApi };\r\n"},"models/other.ts":{import:"../models/other",content:"import { message } from 'antd';\r\nimport { Dva, createModelWith, exportApi } from 'dva-plus';\r\n\r\n// TODO Export these to help IDEA to resolve types\r\nexport namespace State {}\r\n\r\n// Another usage\r\nconst NAMESPACE = 'other' as const;\r\nexport const model = createModelWith<State>()({\r\n  namespace: NAMESPACE,\r\n  state: { count: 0 },\r\n  reducers: [\r\n    {\r\n      test: (state, { payload, operationType }) => {\r\n        message.info(`reducers[test]: ${payload} ${operationType}`);\r\n        return state;\r\n      },\r\n    },\r\n    ((reducer) => {\r\n      console.debug('onReducer hook', reducer);\r\n      return (state, action) => {\r\n        if (action.type?.startsWith(`${NAMESPACE}/`)) {\r\n          message.info(`onReducer-state: ${JSON.stringify(state)}`);\r\n          message.info(`onReducer-action: ${JSON.stringify(action)}`);\r\n        }\r\n        return reducer(state, action);\r\n      };\r\n    }) as Dva.Hook.OnReducer<State>,\r\n  ],\r\n});\r\nexport const api = exportApi(model);\r\n\r\nexport { model as default, api as otherApi };\r\n"},"app.ts":{import:"../app",content:"import { Modal, message } from 'antd';\r\nimport { isFunction, isPlainObject, isString } from 'lodash-es';\r\nimport { Dva, enhanceModels } from 'dva-plus';\r\nimport { ShowResultCommand } from '@/types';\r\n\r\ndeclare module 'dva-plus' {\r\n  export interface ExtraEffectCommands {\r\n    showResult: ShowResultCommand;\r\n  }\r\n}\r\n\r\nexport const dva: Dva.AppConfig = {\r\n  plugins: [\r\n    // model enhancement\r\n    enhanceModels({\r\n      onCommands(commands) {\r\n        const { put } = commands;\r\n\r\n        const showResult: ShowResultCommand = function* showResultEffect({\r\n          response,\r\n          showSuccess = true,\r\n          onSuccess,\r\n          showError = true,\r\n          onError,\r\n        }) {\r\n          const { success = false, message: msg } = response;\r\n          if (success) {\r\n            if (showSuccess) {\r\n              message.success(msg);\r\n            }\r\n            if (isString(onSuccess)) {\r\n              yield put({ type: onSuccess, payload: response });\r\n            } else if (isPlainObject(onSuccess)) {\r\n              yield put(onSuccess as any, response);\r\n            } else if (isFunction(onSuccess)) {\r\n              yield onSuccess(response);\r\n            }\r\n          } else if (showError) {\r\n            Modal.error({ title: msg, onOk: () => onError?.(response) });\r\n          } else if (isFunction(onError)) {\r\n            yield onError(response);\r\n          }\r\n        };\r\n        return { ...commands, showResult };\r\n      },\r\n    }),\r\n  ],\r\n};\r\n"}},dependencies:{react:{version:">=16.9.0"},dva:{version:"2.6.0-beta.20"},antd:{version:"4.10.0",css:"antd/dist/antd.css"},"react-dom":{version:">=16.9.0"},"lodash-es":{version:"4.17.20"}},title:"Complex","title.zh-CN":"\u590d\u6742\u7528\u6cd5",description:'<div class="markdown"><p>This is a complex example</p></div>',"description.zh-CN":'<div class="markdown"><p>\u8fd9\u662f\u4e00\u4e2a\u590d\u6742\u7528\u6cd5\u793a\u4f8b</p></div>',identifier:"dumi-complex"}},"dumi-settergetter":{component:n("ytAz").default,previewerProps:{sources:{_:{tsx:"import React, { Component } from 'react';\r\nimport { connect } from 'dva';\r\nimport { Button, Descriptions, Divider, Input, message } from 'antd';\r\nimport { DefaultRootState } from 'react-redux';\r\nimport { api } from '../models/setterGetter';\r\n\r\ninterface Props extends Partial<DefaultRootState> {}\r\n\r\n@connect<Props>(({ setterGetter }) => ({ setterGetter }))\r\nexport default class extends Component<Props> {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Descriptions bordered>\r\n          <Descriptions.Item label=\"count\" contentStyle={{ width: '50%' }}>\r\n            {this.props.setterGetter?.count}\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n        <Divider />\r\n        <Button\r\n          onClick={async () => {\r\n            const count = await api.getCount();\r\n            message.info(count);\r\n          }}\r\n        >\r\n          get count\r\n        </Button>\r\n        <Input.Search\r\n          placeholder=\"random if empty\"\r\n          enterButton=\"set count\"\r\n          type=\"number\"\r\n          onSearch={(val: string) => {\r\n            const count = Number(val === '' ? Math.round(Math.random() * 100) : val);\r\n            api.setCount(count);\r\n          }}\r\n          style={{ width: 300, marginLeft: 16 }}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n"},"models/setterGetter.ts":{import:"../models/setterGetter",content:"import { createModelAndApiWith } from 'dva-plus';\r\n\r\n// TODO Export these to help IDEA to resolve types\r\nexport namespace State {}\r\n\r\nexport const { model, api } = createModelAndApiWith<State>({ count: 0 })({\r\n  namespace: 'setterGetter' as const,\r\n});\r\n\r\nexport default model;\r\n"}},dependencies:{react:{version:">=16.9.0"},dva:{version:"2.6.0-beta.20"},antd:{version:"4.10.0",css:"antd/dist/antd.css"},"react-dom":{version:">=16.9.0"}},title:"Setters & Getters","title.zh-CN":"set/get \u8bbf\u95ee\u5668",description:'<div class="markdown"><p>use Setters &#x26; Getters to update <code>state</code> easier</p></div>',"description.zh-CN":'<div class="markdown"><p>\u4f7f\u7528 Setter \u548c Getter \u66f4\u4fbf\u6377\u5730\u4fee\u6539 <code>state</code></p></div>',identifier:"dumi-settergetter"}},"dumi-commands":{component:n("EK5R").default,previewerProps:{sources:{_:{tsx:'import React, { Component } from \'react\';\r\nimport { connect } from \'dva\';\r\nimport { Button, Descriptions, Divider, Switch, message } from \'antd\';\r\nimport { DefaultRootState } from \'react-redux\';\r\nimport { api } from \'../models/commands\';\r\nimport \'../app\';\r\n\r\ninterface Props extends Partial<DefaultRootState> {}\r\n\r\n@connect<Props>(({ loading, commands }) => ({ loading, commands }))\r\nexport default class extends Component<Props> {\r\n  render() {\r\n    const { loading, commands } = this.props;\r\n    const loading1 = !!loading!.models.commands;\r\n    const loading2 = !!loading!.effects[api.testSelect.actionName];\r\n    return (\r\n      <>\r\n        <Descriptions bordered>\r\n          <Descriptions.Item label="Model state">{JSON.stringify(commands)}</Descriptions.Item>\r\n          <Descriptions.Item label="Loading status">\r\n            <Switch checked={loading1} unCheckedChildren="model" checkedChildren="model" />\r\n            <Switch\r\n              checked={loading2}\r\n              unCheckedChildren="testSelect"\r\n              checkedChildren="testSelect"\r\n              style={{ marginLeft: 16 }}\r\n            />\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n        <Divider orientation="left">Basic</Divider>\r\n        <Button.Group>\r\n          <Button onClick={() => api.testPut()}>testPut</Button>\r\n          <Button onClick={() => api.testPut2()}>testPut2</Button>\r\n          <Button onClick={() => api.testCall()}>testCall</Button>\r\n          <Button onClick={() => api.testCall2()}>testCall2</Button>\r\n          <Button onClick={() => api.testSelect()}>testSelect</Button>\r\n          <Button onClick={() => api.testState().then(message.info)}>testState</Button>\r\n          <Button\r\n            onClick={() => api.testState2().then((data) => message.info(JSON.stringify(data)))}\r\n          >\r\n            testState2\r\n          </Button>\r\n          <Button onClick={() => api.testUpdate()}>testUpdate</Button>\r\n        </Button.Group>\r\n        <Divider orientation="left">Customize commands</Divider>\r\n        <Button.Group>\r\n          <Button onClick={() => api.testShowResult(true)}>testShowResult1</Button>\r\n          <Button onClick={() => api.testShowResult(false)}>testShowResult2</Button>\r\n        </Button.Group>\r\n      </>\r\n    );\r\n  }\r\n}\r\n'},"models/commands.ts":{import:"../models/commands",content:"import { Modal, message } from 'antd';\r\nimport { Action, createModelAndApiWith } from 'dva-plus';\r\nimport { BizResponse } from '@/types';\r\n\r\n// TODO Export these to help IDEA to resolve types\r\nexport namespace State {}\r\n\r\nconst sleep = (time: number) =>\r\n  new Promise<number>((resolve) => setTimeout(() => resolve(time), time * 1000));\r\n\r\nconst fakeFetch = (success: boolean): BizResponse => ({\r\n  success,\r\n  message: success ? 'success' : 'fail',\r\n  data: success ? 'this is success content' : 'this is fail content',\r\n  code: success ? '200' : '9999',\r\n});\r\n\r\nexport const { model, api } = createModelAndApiWith<State>({ count: 0 })({\r\n  namespace: 'commands' as const,\r\n  effects: {\r\n    testPut: function* (_: Action<undefined>, { put }) {\r\n      const count = Math.round(Math.random() * 1000);\r\n      yield put('updateState', { count });\r\n    },\r\n    testPut2: function* (_: Action<undefined>, { put }) {\r\n      const count = Math.round(Math.random() * 1000);\r\n      yield put({ type: 'updateState', payload: { count } });\r\n    },\r\n    testCall: function* (_: Action<undefined>, { call }) {\r\n      const a1 = yield* call(sleep, 1);\r\n      const a2 = yield call(sleep, 3);\r\n      const a3 = yield sleep(2);\r\n      message.info(`testCall: ${a1} ${a2} ${a3}`);\r\n    },\r\n    testCall2: function* (_: Action<undefined>, { call }) {\r\n      // do not use arrow function\r\n      function fn(this: any, msg: string) {\r\n        message.info(`call with context - ${msg} - ${JSON.stringify(this)}`);\r\n      }\r\n      const context = { a: 123, fn };\r\n      yield* call([context, fn], 'test1');\r\n      yield* call({ context, fn }, 'test2');\r\n      yield* call([context, 'fn'], 'test3');\r\n    },\r\n    testSelect: function* (_: Action<undefined>, { select, call }) {\r\n      const data = [];\r\n      data[0] = yield* select();\r\n      data[1] = yield* select('count');\r\n      data[2] = yield* select('a.b.c');\r\n      data[3] = yield* select<boolean>('count2'); // undefined\r\n      data[4] = yield* select('enum', 'global');\r\n      data[5] = yield* select('a.d.length', 'commands');\r\n      data[6] = yield* select('enum', 'commands'); // undefined\r\n      data[7] = yield* select<number>('enum.length', 'global');\r\n      data[8] = yield* select<string>('enum.length', 'global2'); // undefined\r\n      data[9] = yield* select((s, a: number) => {\r\n        message.info(`select func: ${a} ${JSON.stringify(s.commands)}`);\r\n        return s.global.enum;\r\n      }, 123);\r\n      message.info(`testSelect: [${data.map((t) => JSON.stringify(t)).join(', ')}]`);\r\n      yield* call(sleep, 1); // sleep for test dva-loading\r\n    },\r\n    testState: function* (_: Action<undefined>, { state }) {\r\n      const { count } = yield* state();\r\n      return count;\r\n    },\r\n    testState2: function* (_: Action<undefined>, { state }) {\r\n      yield* state<State>('commands');\r\n      return yield* state('global');\r\n    },\r\n    testUpdate: function* (_: Action<undefined>, { update }) {\r\n      const count = Math.round(Math.random() * 1000);\r\n      yield update({ count });\r\n    },\r\n    testShowResult: function* ({ payload }: Action<boolean>, { showResult }) {\r\n      const response = fakeFetch(payload!);\r\n      yield showResult({\r\n        response,\r\n        showError: false,\r\n        onError({ message: title, data }) {\r\n          Modal.error({ title, content: data });\r\n        },\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport default model;\r\n"},"app.ts":{import:"../app",content:"import { Modal, message } from 'antd';\r\nimport { isFunction, isPlainObject, isString } from 'lodash-es';\r\nimport { Dva, enhanceModels } from 'dva-plus';\r\nimport { ShowResultCommand } from '@/types';\r\n\r\ndeclare module 'dva-plus' {\r\n  export interface ExtraEffectCommands {\r\n    showResult: ShowResultCommand;\r\n  }\r\n}\r\n\r\nexport const dva: Dva.AppConfig = {\r\n  plugins: [\r\n    // model enhancement\r\n    enhanceModels({\r\n      onCommands(commands) {\r\n        const { put } = commands;\r\n\r\n        const showResult: ShowResultCommand = function* showResultEffect({\r\n          response,\r\n          showSuccess = true,\r\n          onSuccess,\r\n          showError = true,\r\n          onError,\r\n        }) {\r\n          const { success = false, message: msg } = response;\r\n          if (success) {\r\n            if (showSuccess) {\r\n              message.success(msg);\r\n            }\r\n            if (isString(onSuccess)) {\r\n              yield put({ type: onSuccess, payload: response });\r\n            } else if (isPlainObject(onSuccess)) {\r\n              yield put(onSuccess as any, response);\r\n            } else if (isFunction(onSuccess)) {\r\n              yield onSuccess(response);\r\n            }\r\n          } else if (showError) {\r\n            Modal.error({ title: msg, onOk: () => onError?.(response) });\r\n          } else if (isFunction(onError)) {\r\n            yield onError(response);\r\n          }\r\n        };\r\n        return { ...commands, showResult };\r\n      },\r\n    }),\r\n  ],\r\n};\r\n"}},dependencies:{react:{version:">=16.9.0"},dva:{version:"2.6.0-beta.20"},antd:{version:"4.10.0",css:"antd/dist/antd.css"},"react-dom":{version:">=16.9.0"},"lodash-es":{version:"4.17.20"}},title:"Commands","title.zh-CN":"\u5185\u7f6e\u547d\u4ee4",description:'<div class="markdown"><p>use effect\'s <code>commands</code> to handle common logic ( refer <a href="https://redux-saga.js.org/docs/api/" target="_blank">redux-saga docs<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="__dumi-default-external-link-icon"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path><polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a> )</p></div>',"description.zh-CN":'<div class="markdown"><p>\u4f7f\u7528 effect \u63d0\u4f9b\u7684 <code>commands</code> \u6765\u5904\u7406\u901a\u7528\u903b\u8f91\uff08\u53c2\u8003 <a href="https://redux-saga.js.org/docs/api/" target="_blank">redux-saga \u6587\u6863<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="__dumi-default-external-link-icon"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path><polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a>\uff09</p></div>',identifier:"dumi-commands"}},"dumi-subscriptions":{component:n("cXEf").default,previewerProps:{sources:{_:{tsx:"import '../models/subscriptions';\n\nexport default () => 'View logs in DevTools';\n"},"models/subscriptions.ts":{import:"../models/subscriptions",content:"import { createModel, enhanceSubscriptions } from 'dva-plus';\r\n\r\nexport default createModel({\r\n  namespace: 'subscriptions' as const,\r\n  subscriptions: enhanceSubscriptions({\r\n    // use `property` not `shorthand method` to help IDEA to resolve types\r\n    setup: ({ dispatch, history, listen }, onError) => {\r\n      onError('test Error', { data: 'test' });\r\n      listen('/:path*', ({ query, params }) => {\r\n        if (!console.groupCollapsed) return;\r\n\r\n        console.groupCollapsed(`subscriptions: ${params.path || '/'}`);\r\n        console.log(history, query);\r\n        console.groupEnd();\r\n      });\r\n\r\n      listen('/user/list', { type: 'fetchUsers' });\r\n      listen('/user/:id', { type: 'fetchUser' });\r\n      listen('/user/query', ({ params }) => {\r\n        dispatch({ type: 'fetchUsers', payload: params });\r\n      });\r\n      listen({\r\n        '/user/list': () => {},\r\n        '/user/query': () => {},\r\n      });\r\n    },\r\n  }),\r\n});\r\n"}},dependencies:{},title:"Subscriptions","title.zh-CN":"\u8def\u7531\u53d8\u5316\u8ba2\u9605",description:'<div class="markdown"><p>support the <code>listen</code> method to monitor routing changes easier</p></div>',"description.zh-CN":'<div class="markdown"><p>\u63d0\u4f9b <code>listen</code> \u65b9\u6cd5\u4ee5\u66f4\u5bb9\u6613\u5730\u76d1\u89c6\u8def\u7531\u7684\u53d8\u5316</p></div>',identifier:"dumi-subscriptions"}},"dumi-counter-1":{component:n("GHxu").default,previewerProps:{sources:{_:{tsx:"import React, { Component } from 'react';\r\nimport { connect } from 'dva';\r\nimport { api } from '../models/counter';\r\n\r\ninterface Props {\r\n  count?: number;\r\n}\r\n\r\n@connect<Props>(({ counter: { count } }) => ({ count }))\r\nexport default class extends Component<Props> {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>{this.props.count}</h2>\r\n        <button onClick={() => api.add()} data-action=\"plus\">\r\n          +\r\n        </button>\r\n        <button onClick={() => api.add(-1)} data-action=\"minus\">\r\n          -\r\n        </button>\r\n        <button onClick={() => api.reset()} data-action=\"reset\">\r\n          reset\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"},"models/counter.ts":{import:"../models/counter",content:"import { Action, createModelAndApiWith } from 'dva-plus';\n\ndeclare module 'react-redux' {\n  // Use module augmentation to append DefaultRootState's type definition\n  // ref: https://www.typescriptlang.org/docs/handbook/declaration-merging.html#module-augmentation\n  export interface DefaultRootState {\n    counter: CounterState;\n  }\n}\n\ninterface CounterState {\n  count: number;\n}\n\nexport const { model, api } = createModelAndApiWith<CounterState>()({\n  namespace: 'counter',\n  state: { count: 0 },\n  effects: {\n    reset: function* (_, { update }) {\n      yield update({ count: 0 });\n    },\n  },\n  reducers: {\n    add: (state, { payload }: Action<number | undefined>) => {\n      return { ...state, count: (state?.count || 0) + (payload || 1) };\n    },\n  },\n});\n\nexport default model;\n"}},dependencies:{react:{version:"^16.8.4"},dva:{version:"2.6.0-beta.20"},"react-dom":{version:"^16.8.4"}},title:"Basic","title.zh-CN":"\u57fa\u672c\u7528\u6cd5",motions:["autoplay",'click:[data-action="plus"]',"timeout:500",'click:[data-action="plus"]',"timeout:500",'click:[data-action="plus"]',"timeout:500",'click:[data-action="minus"]',"timeout:1000",'click:[data-action="reset"]'],description:'<div class="markdown"><p>This is a basic example of the <code>counter</code></p></div>',"description.zh-CN":'<div class="markdown"><p>\u8fd9\u662f <code>\u8ba1\u6570\u5668</code> \u7ec4\u4ef6\u7684\u57fa\u7840\u793a\u4f8b</p></div>',identifier:"dumi-counter-1"}},"dumi-complex-1":{component:n("wkF6").default,previewerProps:{sources:{_:{tsx:"import React, { Component } from 'react';\r\nimport { connect } from 'dva';\r\nimport { Button, Descriptions, Divider, Input, message } from 'antd';\r\nimport { DefaultRootState } from 'react-redux';\r\nimport { globalApi } from '../models/global';\r\nimport { otherApi } from '../models/other';\r\nimport '../app';\r\n\r\nconsole.debug('globalApi', globalApi, globalApi.addCount);\r\n\r\ninterface Props extends Partial<DefaultRootState> {}\r\n\r\nconst addCount = () => {\r\n  globalApi.addCount(2);\r\n};\r\n\r\nconst showCount = () => {\r\n  globalApi.count().then((...args) => {\r\n    message.info(`globalApi.getCount: ${JSON.stringify(args)}`);\r\n  });\r\n};\r\n\r\nconst resetCount = async () => {\r\n  globalApi.updateState({ count: 1, enum: '1' });\r\n};\r\n\r\nconst extraApi1 = () => {\r\n  globalApi.extraApi1();\r\n};\r\n\r\nconst extraApi2 = (val: string) => {\r\n  globalApi.extraApi3(Number(val));\r\n};\r\n\r\nconst testNoGenerator = async () => {\r\n  const result = await globalApi.testNoGenerator(Math.round(Math.random() * 1000));\r\n  message.info(`globalApi.testNoGenerator: ${result}`);\r\n};\r\n\r\nconst testOther = () => {\r\n  otherApi.test('test', 'testType');\r\n};\r\n\r\n@connect<Props>(({ global }) => ({ global }))\r\nexport default class extends Component<Props> {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Descriptions bordered>\r\n          <Descriptions.Item label=\"Model state\">\r\n            {JSON.stringify(this.props.global)}\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n        <Divider orientation=\"left\">Basic</Divider>\r\n        <Button.Group>\r\n          <Button onClick={addCount}>addCount</Button>\r\n          <Button onClick={showCount}>showCount</Button>\r\n          <Button onClick={resetCount}>resetCount</Button>\r\n        </Button.Group>\r\n        <Divider orientation=\"left\">ExtraApi</Divider>\r\n        <Button onClick={extraApi1}>extraApi1</Button>\r\n        <Input.Search\r\n          placeholder=\"input\"\r\n          enterButton=\"extraApi2\"\r\n          type=\"number\"\r\n          onSearch={extraApi2}\r\n          defaultValue={1}\r\n          style={{ width: 300, marginLeft: 16 }}\r\n        />\r\n        <Divider orientation=\"left\">Others</Divider>\r\n        <Button.Group>\r\n          <Button onClick={testNoGenerator}>testNoGenerator</Button>\r\n          <Button onClick={testOther}>testOther</Button>\r\n        </Button.Group>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"},"models/global.ts":{import:"../models/global",content:"import { Action, createModelAndApiWith } from 'dva-plus';\r\n\r\n// TODO Export these to help IDEA to resolve types\r\nexport namespace State {}\r\n\r\nexport const { model, api } = createModelAndApiWith<State>()(\r\n  {\r\n    namespace: 'global' as const,\r\n    state: { count: 0, enum: '3' },\r\n    effects: {\r\n      // use `property` not `shorthand method` to help IDEA to resolve types\r\n      count: function* (_: Action<undefined>, { state, put }) {\r\n        yield put('updateState', { enum: Math.round(Math.random() * 3).toString() as any });\r\n        const { count } = yield* state();\r\n        return count;\r\n      },\r\n      testNoGenerator: ({ payload }: Action<number | string>) => payload,\r\n    },\r\n    reducers: {\r\n      addCount: (state, { payload }: Action<number | null>) => {\r\n        return { ...state, count: (state?.count || 0) + (payload || 1) };\r\n      },\r\n    },\r\n  },\r\n  ({ dispatchApi }) => ({\r\n    extraApi1() {\r\n      const addCount = dispatchApi('addCount');\r\n      addCount(3);\r\n    },\r\n    async extraApi2(delta: number) {\r\n      await api.addCount(delta);\r\n      return 'haha' as const;\r\n    },\r\n    async extraApi3(delta: number) {\r\n      const count = await api.getCount();\r\n      return api.updateState({ count: (count || 0) + delta });\r\n    },\r\n  }),\r\n);\r\n\r\nexport { model as default, api as globalApi };\r\n"},"models/other.ts":{import:"../models/other",content:"import { message } from 'antd';\r\nimport { Dva, createModelWith, exportApi } from 'dva-plus';\r\n\r\n// TODO Export these to help IDEA to resolve types\r\nexport namespace State {}\r\n\r\n// Another usage\r\nconst NAMESPACE = 'other' as const;\r\nexport const model = createModelWith<State>()({\r\n  namespace: NAMESPACE,\r\n  state: { count: 0 },\r\n  reducers: [\r\n    {\r\n      test: (state, { payload, operationType }) => {\r\n        message.info(`reducers[test]: ${payload} ${operationType}`);\r\n        return state;\r\n      },\r\n    },\r\n    ((reducer) => {\r\n      console.debug('onReducer hook', reducer);\r\n      return (state, action) => {\r\n        if (action.type?.startsWith(`${NAMESPACE}/`)) {\r\n          message.info(`onReducer-state: ${JSON.stringify(state)}`);\r\n          message.info(`onReducer-action: ${JSON.stringify(action)}`);\r\n        }\r\n        return reducer(state, action);\r\n      };\r\n    }) as Dva.Hook.OnReducer<State>,\r\n  ],\r\n});\r\nexport const api = exportApi(model);\r\n\r\nexport { model as default, api as otherApi };\r\n"},"app.ts":{import:"../app",content:"import { Modal, message } from 'antd';\r\nimport { isFunction, isPlainObject, isString } from 'lodash-es';\r\nimport { Dva, enhanceModels } from 'dva-plus';\r\nimport { ShowResultCommand } from '@/types';\r\n\r\ndeclare module 'dva-plus' {\r\n  export interface ExtraEffectCommands {\r\n    showResult: ShowResultCommand;\r\n  }\r\n}\r\n\r\nexport const dva: Dva.AppConfig = {\r\n  plugins: [\r\n    // model enhancement\r\n    enhanceModels({\r\n      onCommands(commands) {\r\n        const { put } = commands;\r\n\r\n        const showResult: ShowResultCommand = function* showResultEffect({\r\n          response,\r\n          showSuccess = true,\r\n          onSuccess,\r\n          showError = true,\r\n          onError,\r\n        }) {\r\n          const { success = false, message: msg } = response;\r\n          if (success) {\r\n            if (showSuccess) {\r\n              message.success(msg);\r\n            }\r\n            if (isString(onSuccess)) {\r\n              yield put({ type: onSuccess, payload: response });\r\n            } else if (isPlainObject(onSuccess)) {\r\n              yield put(onSuccess as any, response);\r\n            } else if (isFunction(onSuccess)) {\r\n              yield onSuccess(response);\r\n            }\r\n          } else if (showError) {\r\n            Modal.error({ title: msg, onOk: () => onError?.(response) });\r\n          } else if (isFunction(onError)) {\r\n            yield onError(response);\r\n          }\r\n        };\r\n        return { ...commands, showResult };\r\n      },\r\n    }),\r\n  ],\r\n};\r\n"}},dependencies:{react:{version:">=16.9.0"},dva:{version:"2.6.0-beta.20"},antd:{version:"4.10.0",css:"antd/dist/antd.css"},"react-dom":{version:">=16.9.0"},"lodash-es":{version:"4.17.20"}},title:"Complex","title.zh-CN":"\u590d\u6742\u7528\u6cd5",description:'<div class="markdown"><p>This is a complex example</p></div>',"description.zh-CN":'<div class="markdown"><p>\u8fd9\u662f\u4e00\u4e2a\u590d\u6742\u7528\u6cd5\u793a\u4f8b</p></div>',identifier:"dumi-complex-1"}},"dumi-settergetter-1":{component:n("ytAz").default,previewerProps:{sources:{_:{tsx:"import React, { Component } from 'react';\r\nimport { connect } from 'dva';\r\nimport { Button, Descriptions, Divider, Input, message } from 'antd';\r\nimport { DefaultRootState } from 'react-redux';\r\nimport { api } from '../models/setterGetter';\r\n\r\ninterface Props extends Partial<DefaultRootState> {}\r\n\r\n@connect<Props>(({ setterGetter }) => ({ setterGetter }))\r\nexport default class extends Component<Props> {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Descriptions bordered>\r\n          <Descriptions.Item label=\"count\" contentStyle={{ width: '50%' }}>\r\n            {this.props.setterGetter?.count}\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n        <Divider />\r\n        <Button\r\n          onClick={async () => {\r\n            const count = await api.getCount();\r\n            message.info(count);\r\n          }}\r\n        >\r\n          get count\r\n        </Button>\r\n        <Input.Search\r\n          placeholder=\"random if empty\"\r\n          enterButton=\"set count\"\r\n          type=\"number\"\r\n          onSearch={(val: string) => {\r\n            const count = Number(val === '' ? Math.round(Math.random() * 100) : val);\r\n            api.setCount(count);\r\n          }}\r\n          style={{ width: 300, marginLeft: 16 }}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n"},"models/setterGetter.ts":{import:"../models/setterGetter",content:"import { createModelAndApiWith } from 'dva-plus';\r\n\r\n// TODO Export these to help IDEA to resolve types\r\nexport namespace State {}\r\n\r\nexport const { model, api } = createModelAndApiWith<State>({ count: 0 })({\r\n  namespace: 'setterGetter' as const,\r\n});\r\n\r\nexport default model;\r\n"}},dependencies:{react:{version:">=16.9.0"},dva:{version:"2.6.0-beta.20"},antd:{version:"4.10.0",css:"antd/dist/antd.css"},"react-dom":{version:">=16.9.0"}},title:"Setters & Getters","title.zh-CN":"set/get \u8bbf\u95ee\u5668",description:'<div class="markdown"><p>use Setters &#x26; Getters to update <code>state</code> easier</p></div>',"description.zh-CN":'<div class="markdown"><p>\u4f7f\u7528 Setter \u548c Getter \u66f4\u4fbf\u6377\u5730\u4fee\u6539 <code>state</code></p></div>',identifier:"dumi-settergetter-1"}},"dumi-commands-1":{component:n("EK5R").default,previewerProps:{sources:{_:{tsx:'import React, { Component } from \'react\';\r\nimport { connect } from \'dva\';\r\nimport { Button, Descriptions, Divider, Switch, message } from \'antd\';\r\nimport { DefaultRootState } from \'react-redux\';\r\nimport { api } from \'../models/commands\';\r\nimport \'../app\';\r\n\r\ninterface Props extends Partial<DefaultRootState> {}\r\n\r\n@connect<Props>(({ loading, commands }) => ({ loading, commands }))\r\nexport default class extends Component<Props> {\r\n  render() {\r\n    const { loading, commands } = this.props;\r\n    const loading1 = !!loading!.models.commands;\r\n    const loading2 = !!loading!.effects[api.testSelect.actionName];\r\n    return (\r\n      <>\r\n        <Descriptions bordered>\r\n          <Descriptions.Item label="Model state">{JSON.stringify(commands)}</Descriptions.Item>\r\n          <Descriptions.Item label="Loading status">\r\n            <Switch checked={loading1} unCheckedChildren="model" checkedChildren="model" />\r\n            <Switch\r\n              checked={loading2}\r\n              unCheckedChildren="testSelect"\r\n              checkedChildren="testSelect"\r\n              style={{ marginLeft: 16 }}\r\n            />\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n        <Divider orientation="left">Basic</Divider>\r\n        <Button.Group>\r\n          <Button onClick={() => api.testPut()}>testPut</Button>\r\n          <Button onClick={() => api.testPut2()}>testPut2</Button>\r\n          <Button onClick={() => api.testCall()}>testCall</Button>\r\n          <Button onClick={() => api.testCall2()}>testCall2</Button>\r\n          <Button onClick={() => api.testSelect()}>testSelect</Button>\r\n          <Button onClick={() => api.testState().then(message.info)}>testState</Button>\r\n          <Button\r\n            onClick={() => api.testState2().then((data) => message.info(JSON.stringify(data)))}\r\n          >\r\n            testState2\r\n          </Button>\r\n          <Button onClick={() => api.testUpdate()}>testUpdate</Button>\r\n        </Button.Group>\r\n        <Divider orientation="left">Customize commands</Divider>\r\n        <Button.Group>\r\n          <Button onClick={() => api.testShowResult(true)}>testShowResult1</Button>\r\n          <Button onClick={() => api.testShowResult(false)}>testShowResult2</Button>\r\n        </Button.Group>\r\n      </>\r\n    );\r\n  }\r\n}\r\n'},"models/commands.ts":{import:"../models/commands",content:"import { Modal, message } from 'antd';\r\nimport { Action, createModelAndApiWith } from 'dva-plus';\r\nimport { BizResponse } from '@/types';\r\n\r\n// TODO Export these to help IDEA to resolve types\r\nexport namespace State {}\r\n\r\nconst sleep = (time: number) =>\r\n  new Promise<number>((resolve) => setTimeout(() => resolve(time), time * 1000));\r\n\r\nconst fakeFetch = (success: boolean): BizResponse => ({\r\n  success,\r\n  message: success ? 'success' : 'fail',\r\n  data: success ? 'this is success content' : 'this is fail content',\r\n  code: success ? '200' : '9999',\r\n});\r\n\r\nexport const { model, api } = createModelAndApiWith<State>({ count: 0 })({\r\n  namespace: 'commands' as const,\r\n  effects: {\r\n    testPut: function* (_: Action<undefined>, { put }) {\r\n      const count = Math.round(Math.random() * 1000);\r\n      yield put('updateState', { count });\r\n    },\r\n    testPut2: function* (_: Action<undefined>, { put }) {\r\n      const count = Math.round(Math.random() * 1000);\r\n      yield put({ type: 'updateState', payload: { count } });\r\n    },\r\n    testCall: function* (_: Action<undefined>, { call }) {\r\n      const a1 = yield* call(sleep, 1);\r\n      const a2 = yield call(sleep, 3);\r\n      const a3 = yield sleep(2);\r\n      message.info(`testCall: ${a1} ${a2} ${a3}`);\r\n    },\r\n    testCall2: function* (_: Action<undefined>, { call }) {\r\n      // do not use arrow function\r\n      function fn(this: any, msg: string) {\r\n        message.info(`call with context - ${msg} - ${JSON.stringify(this)}`);\r\n      }\r\n      const context = { a: 123, fn };\r\n      yield* call([context, fn], 'test1');\r\n      yield* call({ context, fn }, 'test2');\r\n      yield* call([context, 'fn'], 'test3');\r\n    },\r\n    testSelect: function* (_: Action<undefined>, { select, call }) {\r\n      const data = [];\r\n      data[0] = yield* select();\r\n      data[1] = yield* select('count');\r\n      data[2] = yield* select('a.b.c');\r\n      data[3] = yield* select<boolean>('count2'); // undefined\r\n      data[4] = yield* select('enum', 'global');\r\n      data[5] = yield* select('a.d.length', 'commands');\r\n      data[6] = yield* select('enum', 'commands'); // undefined\r\n      data[7] = yield* select<number>('enum.length', 'global');\r\n      data[8] = yield* select<string>('enum.length', 'global2'); // undefined\r\n      data[9] = yield* select((s, a: number) => {\r\n        message.info(`select func: ${a} ${JSON.stringify(s.commands)}`);\r\n        return s.global.enum;\r\n      }, 123);\r\n      message.info(`testSelect: [${data.map((t) => JSON.stringify(t)).join(', ')}]`);\r\n      yield* call(sleep, 1); // sleep for test dva-loading\r\n    },\r\n    testState: function* (_: Action<undefined>, { state }) {\r\n      const { count } = yield* state();\r\n      return count;\r\n    },\r\n    testState2: function* (_: Action<undefined>, { state }) {\r\n      yield* state<State>('commands');\r\n      return yield* state('global');\r\n    },\r\n    testUpdate: function* (_: Action<undefined>, { update }) {\r\n      const count = Math.round(Math.random() * 1000);\r\n      yield update({ count });\r\n    },\r\n    testShowResult: function* ({ payload }: Action<boolean>, { showResult }) {\r\n      const response = fakeFetch(payload!);\r\n      yield showResult({\r\n        response,\r\n        showError: false,\r\n        onError({ message: title, data }) {\r\n          Modal.error({ title, content: data });\r\n        },\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport default model;\r\n"},"app.ts":{import:"../app",content:"import { Modal, message } from 'antd';\r\nimport { isFunction, isPlainObject, isString } from 'lodash-es';\r\nimport { Dva, enhanceModels } from 'dva-plus';\r\nimport { ShowResultCommand } from '@/types';\r\n\r\ndeclare module 'dva-plus' {\r\n  export interface ExtraEffectCommands {\r\n    showResult: ShowResultCommand;\r\n  }\r\n}\r\n\r\nexport const dva: Dva.AppConfig = {\r\n  plugins: [\r\n    // model enhancement\r\n    enhanceModels({\r\n      onCommands(commands) {\r\n        const { put } = commands;\r\n\r\n        const showResult: ShowResultCommand = function* showResultEffect({\r\n          response,\r\n          showSuccess = true,\r\n          onSuccess,\r\n          showError = true,\r\n          onError,\r\n        }) {\r\n          const { success = false, message: msg } = response;\r\n          if (success) {\r\n            if (showSuccess) {\r\n              message.success(msg);\r\n            }\r\n            if (isString(onSuccess)) {\r\n              yield put({ type: onSuccess, payload: response });\r\n            } else if (isPlainObject(onSuccess)) {\r\n              yield put(onSuccess as any, response);\r\n            } else if (isFunction(onSuccess)) {\r\n              yield onSuccess(response);\r\n            }\r\n          } else if (showError) {\r\n            Modal.error({ title: msg, onOk: () => onError?.(response) });\r\n          } else if (isFunction(onError)) {\r\n            yield onError(response);\r\n          }\r\n        };\r\n        return { ...commands, showResult };\r\n      },\r\n    }),\r\n  ],\r\n};\r\n"}},dependencies:{react:{version:">=16.9.0"},dva:{version:"2.6.0-beta.20"},antd:{version:"4.10.0",css:"antd/dist/antd.css"},"react-dom":{version:">=16.9.0"},"lodash-es":{version:"4.17.20"}},title:"Commands","title.zh-CN":"\u5185\u7f6e\u547d\u4ee4",description:'<div class="markdown"><p>use effect\'s <code>commands</code> to handle common logic ( refer <a href="https://redux-saga.js.org/docs/api/" target="_blank">redux-saga docs<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="__dumi-default-external-link-icon"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path><polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a> )</p></div>',"description.zh-CN":'<div class="markdown"><p>\u4f7f\u7528 effect \u63d0\u4f9b\u7684 <code>commands</code> \u6765\u5904\u7406\u901a\u7528\u903b\u8f91\uff08\u53c2\u8003 <a href="https://redux-saga.js.org/docs/api/" target="_blank">redux-saga \u6587\u6863<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="__dumi-default-external-link-icon"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path><polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a>\uff09</p></div>',identifier:"dumi-commands-1"}},"dumi-subscriptions-1":{component:n("cXEf").default,previewerProps:{sources:{_:{tsx:"import '../models/subscriptions';\n\nexport default () => 'View logs in DevTools';\n"},"models/subscriptions.ts":{import:"../models/subscriptions",content:"import { createModel, enhanceSubscriptions } from 'dva-plus';\r\n\r\nexport default createModel({\r\n  namespace: 'subscriptions' as const,\r\n  subscriptions: enhanceSubscriptions({\r\n    // use `property` not `shorthand method` to help IDEA to resolve types\r\n    setup: ({ dispatch, history, listen }, onError) => {\r\n      onError('test Error', { data: 'test' });\r\n      listen('/:path*', ({ query, params }) => {\r\n        if (!console.groupCollapsed) return;\r\n\r\n        console.groupCollapsed(`subscriptions: ${params.path || '/'}`);\r\n        console.log(history, query);\r\n        console.groupEnd();\r\n      });\r\n\r\n      listen('/user/list', { type: 'fetchUsers' });\r\n      listen('/user/:id', { type: 'fetchUser' });\r\n      listen('/user/query', ({ params }) => {\r\n        dispatch({ type: 'fetchUsers', payload: params });\r\n      });\r\n      listen({\r\n        '/user/list': () => {},\r\n        '/user/query': () => {},\r\n      });\r\n    },\r\n  }),\r\n});\r\n"}},dependencies:{},title:"Subscriptions","title.zh-CN":"\u8def\u7531\u53d8\u5316\u8ba2\u9605",description:'<div class="markdown"><p>support the <code>listen</code> method to monitor routing changes easier</p></div>',"description.zh-CN":'<div class="markdown"><p>\u63d0\u4f9b <code>listen</code> \u65b9\u6cd5\u4ee5\u66f4\u5bb9\u6613\u5730\u76d1\u89c6\u8def\u7531\u7684\u53d8\u5316</p></div>',identifier:"dumi-subscriptions-1"}}}}});